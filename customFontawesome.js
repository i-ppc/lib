/*!
 * Font Awesome Free 5.12.0 by @fontawesome - https://fontawesome.com
 * License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License)
 */
(function() {
    'use strict';

    var _WINDOW = {};
    var _DOCUMENT = {};

    try {
        if (typeof window !== 'undefined') _WINDOW = window;
        if (typeof document !== 'undefined') _DOCUMENT = document;
    } catch (e) {}

    var _ref = _WINDOW.navigator || {},
        _ref$userAgent = _ref.userAgent,
        userAgent = _ref$userAgent === void 0 ? '' : _ref$userAgent;

    var WINDOW = _WINDOW;
    var DOCUMENT = _DOCUMENT;
    var IS_BROWSER = !!WINDOW.document;
    var IS_DOM = !!DOCUMENT.documentElement && !!DOCUMENT.head && typeof DOCUMENT.addEventListener === 'function' && typeof DOCUMENT.createElement === 'function';
    var IS_IE = ~userAgent.indexOf('MSIE') || ~userAgent.indexOf('Trident/');

    var NAMESPACE_IDENTIFIER = '___FONT_AWESOME___';
    var PRODUCTION = function() {
        try {
            return "production" === 'production';
        } catch (e) {
            return false;
        }
    }();

    function bunker(fn) {
        try {
            fn();
        } catch (e) {
            if (!PRODUCTION) {
                throw e;
            }
        }
    }

    function _defineProperty(obj, key, value) {
        if (key in obj) {
            Object.defineProperty(obj, key, {
                value: value,
                enumerable: true,
                configurable: true,
                writable: true
            });
        } else {
            obj[key] = value;
        }

        return obj;
    }

    function _objectSpread(target) {
        for (var i = 1; i < arguments.length; i++) {
            var source = arguments[i] != null ? arguments[i] : {};
            var ownKeys = Object.keys(source);

            if (typeof Object.getOwnPropertySymbols === 'function') {
                ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                    return Object.getOwnPropertyDescriptor(source, sym).enumerable;
                }));
            }

            ownKeys.forEach(function(key) {
                _defineProperty(target, key, source[key]);
            });
        }

        return target;
    }

    var w = WINDOW || {};
    if (!w[NAMESPACE_IDENTIFIER]) w[NAMESPACE_IDENTIFIER] = {};
    if (!w[NAMESPACE_IDENTIFIER].styles) w[NAMESPACE_IDENTIFIER].styles = {};
    if (!w[NAMESPACE_IDENTIFIER].hooks) w[NAMESPACE_IDENTIFIER].hooks = {};
    if (!w[NAMESPACE_IDENTIFIER].shims) w[NAMESPACE_IDENTIFIER].shims = [];
    var namespace = w[NAMESPACE_IDENTIFIER];

    function defineIcons(prefix, icons) {
        var params = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
        var _params$skipHooks = params.skipHooks,
            skipHooks = _params$skipHooks === void 0 ? false : _params$skipHooks;
        var normalized = Object.keys(icons).reduce(function(acc, iconName) {
            var icon = icons[iconName];
            var expanded = !!icon.icon;

            if (expanded) {
                acc[icon.iconName] = icon.icon;
            } else {
                acc[iconName] = icon;
            }

            return acc;
        }, {});

        if (typeof namespace.hooks.addPack === 'function' && !skipHooks) {
            namespace.hooks.addPack(prefix, normalized);
        } else {
            namespace.styles[prefix] = _objectSpread({}, namespace.styles[prefix] || {}, normalized);
        }
        /**
         * Font Awesome 4 used the prefix of `fa` for all icons. With the introduction
         * of new styles we needed to differentiate between them. Prefix `fa` is now an alias
         * for `fas` so we'll easy the upgrade process for our users by automatically defining
         * this as well.
         */



        defineIcons('fa', icons);

    }

    var icons = {
        "bookmark": [384, 512, [], "f02e", "M336 0H48C21.49 0 0 21.49 0 48v464l192-112 192 112V48c0-26.51-21.49-48-48-48zm0 428.43l-144-84-144 84V54a6 6 0 0 1 6-6h276c3.314 0 6 2.683 6 5.996V428.43z"],
        "wallet": [512, 512, [], "f555", "M461.2 128H80c-8.84 0-16-7.16-16-16s7.16-16 16-16h384c8.84 0 16-7.16 16-16 0-26.51-21.49-48-48-48H64C28.65 32 0 60.65 0 96v320c0 35.35 28.65 64 64 64h397.2c28.02 0 50.8-21.53 50.8-48V176c0-26.47-22.78-48-50.8-48zM416 336c-17.67 0-32-14.33-32-32s14.33-32 32-32 32 14.33 32 32-14.33 32-32 32z"],
        "bars": [448, 512, [], "f0c9", "M16 132h416c8.837 0 16-7.163 16-16V76c0-8.837-7.163-16-16-16H16C7.163 60 0 67.163 0 76v40c0 8.837 7.163 16 16 16zm0 160h416c8.837 0 16-7.163 16-16v-40c0-8.837-7.163-16-16-16H16c-8.837 0-16 7.163-16 16v40c0 8.837 7.163 16 16 16zm0 160h416c8.837 0 16-7.163 16-16v-40c0-8.837-7.163-16-16-16H16c-8.837 0-16 7.163-16 16v40c0 8.837 7.163 16 16 16z"],
        "arrow-alt-circle-right": [512, 512, [], "f35a", "M504 256C504 119 393 8 256 8S8 119 8 256s111 248 248 248 248-111 248-248zm-448 0c0-110.5 89.5-200 200-200s200 89.5 200 200-89.5 200-200 200S56 366.5 56 256zm72 20v-40c0-6.6 5.4-12 12-12h116v-67c0-10.7 12.9-16 20.5-8.5l99 99c4.7 4.7 4.7 12.3 0 17l-99 99c-7.6 7.6-20.5 2.2-20.5-8.5v-67H140c-6.6 0-12-5.4-12-12z"],
        "download": [512, 512, [], "f019", "M216 0h80c13.3 0 24 10.7 24 24v168h87.7c17.8 0 26.7 21.5 14.1 34.1L269.7 378.3c-7.5 7.5-19.8 7.5-27.3 0L90.1 226.1c-12.6-12.6-3.7-34.1 14.1-34.1H192V24c0-13.3 10.7-24 24-24zm296 376v112c0 13.3-10.7 24-24 24H24c-13.3 0-24-10.7-24-24V376c0-13.3 10.7-24 24-24h146.7l49 49c20.1 20.1 52.5 20.1 72.6 0l49-49H488c13.3 0 24 10.7 24 24zm-124 88c0-11-9-20-20-20s-20 9-20 20 9 20 20 20 20-9 20-20zm64 0c0-11-9-20-20-20s-20 9-20 20 9 20 20 20 20-9 20-20z"],
        "pencil-alt": [512, 512, [], "f303", "M497.9 142.1l-46.1 46.1c-4.7 4.7-12.3 4.7-17 0l-111-111c-4.7-4.7-4.7-12.3 0-17l46.1-46.1c18.7-18.7 49.1-18.7 67.9 0l60.1 60.1c18.8 18.7 18.8 49.1 0 67.9zM284.2 99.8L21.6 362.4.4 483.9c-2.9 16.4 11.4 30.6 27.8 27.8l121.5-21.3 262.6-262.6c4.7-4.7 4.7-12.3 0-17l-111-111c-4.8-4.7-12.4-4.7-17.1 0zM124.1 339.9c-5.5-5.5-5.5-14.3 0-19.8l154-154c5.5-5.5 14.3-5.5 19.8 0s5.5 14.3 0 19.8l-154 154c-5.5 5.5-14.3 5.5-19.8 0zM88 424h48v36.3l-64.5 11.3-31.1-31.1L51.7 376H88v48z"],
        "mouse-pointer": [320, 512, [], "f245", "M302.189 329.126H196.105l55.831 135.993c3.889 9.428-.555 19.999-9.444 23.999l-49.165 21.427c-9.165 4-19.443-.571-23.332-9.714l-53.053-129.136-86.664 89.138C18.729 472.71 0 463.554 0 447.977V18.299C0 1.899 19.921-6.096 30.277 5.443l284.412 292.542c11.472 11.179 3.007 31.141-12.5 31.141z"],
        "plus-circle": [512, 512, [], "f055", "M256 8C119 8 8 119 8 256s111 248 248 248 248-111 248-248S393 8 256 8zm144 276c0 6.6-5.4 12-12 12h-92v92c0 6.6-5.4 12-12 12h-56c-6.6 0-12-5.4-12-12v-92h-92c-6.6 0-12-5.4-12-12v-56c0-6.6 5.4-12 12-12h92v-92c0-6.6 5.4-12 12-12h56c6.6 0 12 5.4 12 12v92h92c6.6 0 12 5.4 12 12v56z"],
        "minus-circle": [512, 512, [], "f056", "M256 8C119 8 8 119 8 256s111 248 248 248 248-111 248-248S393 8 256 8zM124 296c-6.6 0-12-5.4-12-12v-56c0-6.6 5.4-12 12-12h264c6.6 0 12 5.4 12 12v56c0 6.6-5.4 12-12 12H124z"],
        "arrows-alt": [512, 512, [], "f0b2", "M352.201 425.775l-79.196 79.196c-9.373 9.373-24.568 9.373-33.941 0l-79.196-79.196c-15.119-15.119-4.411-40.971 16.971-40.97h51.162L228 284H127.196v51.162c0 21.382-25.851 32.09-40.971 16.971L7.029 272.937c-9.373-9.373-9.373-24.569 0-33.941L86.225 159.8c15.119-15.119 40.971-4.411 40.971 16.971V228H228V127.196h-51.23c-21.382 0-32.09-25.851-16.971-40.971l79.196-79.196c9.373-9.373 24.568-9.373 33.941 0l79.196 79.196c15.119 15.119 4.411 40.971-16.971 40.971h-51.162V228h100.804v-51.162c0-21.382 25.851-32.09 40.97-16.971l79.196 79.196c9.373 9.373 9.373 24.569 0 33.941L425.773 352.2c-15.119 15.119-40.971 4.411-40.97-16.971V284H284v100.804h51.23c21.382 0 32.09 25.851 16.971 40.971z"],
        "arrows-alt-h": [512, 512, [], "f337", "M377.941 169.941V216H134.059v-46.059c0-21.382-25.851-32.09-40.971-16.971L7.029 239.029c-9.373 9.373-9.373 24.568 0 33.941l86.059 86.059c15.119 15.119 40.971 4.411 40.971-16.971V296h243.882v46.059c0 21.382 25.851 32.09 40.971 16.971l86.059-86.059c9.373-9.373 9.373-24.568 0-33.941l-86.059-86.059c-15.119-15.12-40.971-4.412-40.971 16.97z"],
        "arrows-alt-v": [256, 512, [], "f338", "M214.059 377.941H168V134.059h46.059c21.382 0 32.09-25.851 16.971-40.971L144.971 7.029c-9.373-9.373-24.568-9.373-33.941 0L24.971 93.088c-15.119 15.119-4.411 40.971 16.971 40.971H88v243.882H41.941c-21.382 0-32.09 25.851-16.971 40.971l86.059 86.059c9.373 9.373 24.568 9.373 33.941 0l86.059-86.059c15.12-15.119 4.412-40.971-16.97-40.971z"],
        "chevron-right": [320, 512, [], "f054", "M285.476 272.971L91.132 467.314c-9.373 9.373-24.569 9.373-33.941 0l-22.667-22.667c-9.357-9.357-9.375-24.522-.04-33.901L188.505 256 34.484 101.255c-9.335-9.379-9.317-24.544.04-33.901l22.667-22.667c9.373-9.373 24.569-9.373 33.941 0L285.475 239.03c9.373 9.372 9.373 24.568.001 33.941z"],
        "chevron-left": [320, 512, [], "f053", "M34.52 239.03L228.87 44.69c9.37-9.37 24.57-9.37 33.94 0l22.67 22.67c9.36 9.36 9.37 24.52.04 33.9L131.49 256l154.02 154.75c9.34 9.38 9.32 24.54-.04 33.9l-22.67 22.67c-9.37 9.37-24.57 9.37-33.94 0L34.52 272.97c-9.37-9.37-9.37-24.57 0-33.94z"],
        "copyright": [512, 512, [], "f1f9", "M256 8C119.033 8 8 119.033 8 256s111.033 248 248 248 248-111.033 248-248S392.967 8 256 8zm117.134 346.753c-1.592 1.867-39.776 45.731-109.851 45.731-84.692 0-144.484-63.26-144.484-145.567 0-81.303 62.004-143.401 143.762-143.401 66.957 0 101.965 37.315 103.422 38.904a12 12 0 0 1 1.238 14.623l-22.38 34.655c-4.049 6.267-12.774 7.351-18.234 2.295-.233-.214-26.529-23.88-61.88-23.88-46.116 0-73.916 33.575-73.916 76.082 0 39.602 25.514 79.692 74.277 79.692 38.697 0 65.28-28.338 65.544-28.625 5.132-5.565 14.059-5.033 18.508 1.053l24.547 33.572a12.001 12.001 0 0 1-.553 14.866z"],
        "eraser": [512, 512, [], "f12d", "M497.941 273.941c18.745-18.745 18.745-49.137 0-67.882l-160-160c-18.745-18.745-49.136-18.746-67.883 0l-256 256c-18.745 18.745-18.745 49.137 0 67.882l96 96A48.004 48.004 0 0 0 144 480h356c6.627 0 12-5.373 12-12v-40c0-6.627-5.373-12-12-12H355.883l142.058-142.059zm-302.627-62.627l137.373 137.373L265.373 416H150.628l-80-80 124.686-124.686z"],
        "highlighter": [544, 512, [], "f591", "M0 479.98L99.92 512l35.45-35.45-67.04-67.04L0 479.98zm124.61-240.01a36.592 36.592 0 0 0-10.79 38.1l13.05 42.83-50.93 50.94 96.23 96.23 50.86-50.86 42.74 13.08c13.73 4.2 28.65-.01 38.15-10.78l35.55-41.64-173.34-173.34-41.52 35.44zm403.31-160.7l-63.2-63.2c-20.49-20.49-53.38-21.52-75.12-2.35L190.55 183.68l169.77 169.78L530.27 154.4c19.18-21.74 18.15-54.63-2.35-75.13z"],
        "wave-square": [640, 512, [], "f83e", "M735.617,512.6c-43.983,0-63.436-69.192-69.828-91.93c-11.808-42-21.025-96.646-29.939-149.493 c-7.393-43.825-15.036-89.143-23.693-124.063c-8.021-32.357-14.424-45.513-17.667-50.593c-3.243,5.08-9.646,18.235-17.667,50.593 c-8.657,34.921-16.301,80.239-23.693,124.064c-8.914,52.846-18.132,107.491-29.939,149.492 c-6.392,22.737-25.844,91.929-69.828,91.929c-43.983,0-63.434-69.193-69.826-91.93c-11.807-42-21.024-96.646-29.938-149.492 c-7.392-43.825-15.036-89.142-23.692-124.062c-8.021-32.355-14.422-45.512-17.665-50.593c-3.243,5.081-9.645,18.238-17.666,50.593 c-8.657,34.92-16.3,80.237-23.692,124.063c-8.914,52.845-18.131,107.491-29.938,149.491c-6.392,22.737-25.844,91.93-69.826,91.93 c-43.983,0-63.434-69.192-69.826-91.93c-11.807-42-21.024-96.646-29.938-149.492c-7.392-43.824-15.036-89.142-23.692-124.062 c-9.813-39.583-17.202-50.431-19.349-52.914C12.531,92.985,0,74.75,0,52.433C0,29.33,13.432,10.6,30,10.6 c43.982,0,63.434,69.193,69.826,91.931c11.807,42,21.024,96.646,29.938,149.492c7.392,43.825,15.036,89.141,23.692,124.062 c8.02,32.353,14.422,45.511,17.665,50.593c3.243-5.082,9.646-18.24,17.666-50.591c8.656-34.921,16.3-80.237,23.692-124.063 c8.914-52.847,18.131-107.492,29.938-149.492c6.392-22.737,25.843-91.931,69.826-91.931c43.982,0,63.434,69.193,69.826,91.93 c11.807,42.001,21.024,96.646,29.938,149.491c7.392,43.826,15.036,89.143,23.692,124.063c8.021,32.355,14.423,45.512,17.666,50.593 c3.243-5.081,9.646-18.236,17.667-50.592c8.657-34.92,16.301-80.237,23.693-124.063c8.914-52.846,18.132-107.492,29.939-149.493 c6.392-22.737,25.844-91.93,69.828-91.93c43.983,0,63.436,69.193,69.828,91.93c11.808,42.001,21.025,96.646,29.939,149.493 c7.392,43.826,15.037,89.143,23.693,124.063c9.813,39.583,17.203,50.43,19.35,52.913c15.787,1.216,28.317,19.451,28.317,41.769 C765.617,493.871,752.185,512.6,735.617,512.6z"],
        "slash": [640, 512, [], "f715", "M594.53 508.63L6.18 53.9c-6.97-5.42-8.23-15.47-2.81-22.45L23.01 6.18C28.43-.8 38.49-2.06 45.47 3.37L633.82 458.1c6.97 5.42 8.23 15.47 2.81 22.45l-19.64 25.27c-5.42 6.98-15.48 8.23-22.46 2.81z"],
        "circle-notch": [1600, 1280, [], "f1ce", "M1536,640c0-139.333-34.334-267.833-103-385.5C1364.333,136.834,1271.166,43.667,1153.5-25 C1035.833-93.666,907.333-128,768-128c-139.334,0-267.834,34.334-385.5,103C264.833,43.667,171.666,136.834,103,254.5 C34.333,372.167,0,500.667,0,640c0,139.334,34.333,267.834,103,385.5c68.666,117.667,161.833,210.834,279.5,279.5 c117.666,68.667,246.166,103,385.5,103c139.333,0,267.833-34.333,385.5-103c117.666-68.666,210.833-161.833,279.5-279.5 C1501.666,907.834,1536,779.334,1536,640z"],
        "file-alt": [384, 512, [], "f15c", "M224 136V0H24C10.7 0 0 10.7 0 24v464c0 13.3 10.7 24 24 24h336c13.3 0 24-10.7 24-24V160H248c-13.2 0-24-10.8-24-24zm64 236c0 6.6-5.4 12-12 12H108c-6.6 0-12-5.4-12-12v-8c0-6.6 5.4-12 12-12h168c6.6 0 12 5.4 12 12v8zm0-64c0 6.6-5.4 12-12 12H108c-6.6 0-12-5.4-12-12v-8c0-6.6 5.4-12 12-12h168c6.6 0 12 5.4 12 12v8zm0-72v8c0 6.6-5.4 12-12 12H108c-6.6 0-12-5.4-12-12v-8c0-6.6 5.4-12 12-12h168c6.6 0 12 5.4 12 12zm96-114.1v6.1H256V0h6.1c6.4 0 12.5 2.5 17 7l97.9 98c4.5 4.5 7 10.6 7 16.9z"],
        "angle-down": [320, 512, [], "f107", "M143 352.3L7 216.3c-9.4-9.4-9.4-24.6 0-33.9l22.6-22.6c9.4-9.4 24.6-9.4 33.9 0l96.4 96.4 96.4-96.4c9.4-9.4 24.6-9.4 33.9 0l22.6 22.6c9.4 9.4 9.4 24.6 0 33.9l-136 136c-9.2 9.4-24.4 9.4-33.8 0z"],
        "angle-left": [256, 512, [], "f104", "M31.7 239l136-136c9.4-9.4 24.6-9.4 33.9 0l22.6 22.6c9.4 9.4 9.4 24.6 0 33.9L127.9 256l96.4 96.4c9.4 9.4 9.4 24.6 0 33.9L201.7 409c-9.4 9.4-24.6 9.4-33.9 0l-136-136c-9.5-9.4-9.5-24.6-.1-34z"],
        "angle-right": [256, 512, [], "f105", "M224.3 273l-136 136c-9.4 9.4-24.6 9.4-33.9 0l-22.6-22.6c-9.4-9.4-9.4-24.6 0-33.9l96.4-96.4-96.4-96.4c-9.4-9.4-9.4-24.6 0-33.9L54.3 103c9.4-9.4 24.6-9.4 33.9 0l136 136c9.5 9.4 9.5 24.6.1 34z"],
        "angle-up": [320, 512, [], "f106", "M177 159.7l136 136c9.4 9.4 9.4 24.6 0 33.9l-22.6 22.6c-9.4 9.4-24.6 9.4-33.9 0L160 255.9l-96.4 96.4c-9.4 9.4-24.6 9.4-33.9 0L7 329.7c-9.4-9.4-9.4-24.6 0-33.9l136-136c9.4-9.5 24.6-9.5 34-.1z"],
        "book": [448, 512, [], "f02d", "M448 360V24c0-13.3-10.7-24-24-24H96C43 0 0 43 0 96v320c0 53 43 96 96 96h328c13.3 0 24-10.7 24-24v-16c0-7.5-3.5-14.3-8.9-18.7-4.2-15.4-4.2-59.3 0-74.7 5.4-4.3 8.9-11.1 8.9-18.6zM128 134c0-3.3 2.7-6 6-6h212c3.3 0 6 2.7 6 6v20c0 3.3-2.7 6-6 6H134c-3.3 0-6-2.7-6-6v-20zm0 64c0-3.3 2.7-6 6-6h212c3.3 0 6 2.7 6 6v20c0 3.3-2.7 6-6 6H134c-3.3 0-6-2.7-6-6v-20zm253.4 250H96c-17.7 0-32-14.3-32-32 0-17.6 14.4-32 32-32h285.4c-1.9 17.1-1.9 46.9 0 64z"],
        "play-circle": [512, 512, [], "f144", "M256 8C119 8 8 119 8 256s111 248 248 248 248-111 248-248S393 8 256 8zm115.7 272l-176 101c-15.8 8.8-35.7-2.5-35.7-21V152c0-18.4 19.8-29.8 35.7-21l176 107c16.4 9.2 16.4 32.9 0 42z"],
        "file-image": [384, 512, [], "f1c5", "M369.9 97.9L286 14C277 5 264.8-.1 252.1-.1H48C21.5 0 0 21.5 0 48v416c0 26.5 21.5 48 48 48h288c26.5 0 48-21.5 48-48V131.9c0-12.7-5.1-25-14.1-34zM332.1 128H256V51.9l76.1 76.1zM48 464V48h160v104c0 13.3 10.7 24 24 24h104v288H48zm32-48h224V288l-23.5-23.5c-4.7-4.7-12.3-4.7-17 0L176 352l-39.5-39.5c-4.7-4.7-12.3-4.7-17 0L80 352v64zm48-240c-26.5 0-48 21.5-48 48s21.5 48 48 48 48-21.5 48-48-21.5-48-48-48z"],
        "map-marked-alt": [576, 512, [], "f5a0", "M288 0c-69.59 0-126 56.41-126 126 0 56.26 82.35 158.8 113.9 196.02 6.39 7.54 17.82 7.54 24.2 0C331.65 284.8 414 182.26 414 126 414 56.41 357.59 0 288 0zm0 168c-23.2 0-42-18.8-42-42s18.8-42 42-42 42 18.8 42 42-18.8 42-42 42zM20.12 215.95A32.006 32.006 0 0 0 0 245.66v250.32c0 11.32 11.43 19.06 21.94 14.86L160 448V214.92c-8.84-15.98-16.07-31.54-21.25-46.42L20.12 215.95zM288 359.67c-14.07 0-27.38-6.18-36.51-16.96-19.66-23.2-40.57-49.62-59.49-76.72v182l192 64V266c-18.92 27.09-39.82 53.52-59.49 76.72-9.13 10.77-22.44 16.95-36.51 16.95zm266.06-198.51L416 224v288l139.88-55.95A31.996 31.996 0 0 0 576 426.34V176.02c0-11.32-11.43-19.06-21.94-14.86z"],
        "square-full": [512, 512, [], "f45c", "M512 512H0V0h512v512z"],
        "hand-paper": [448, 512, [], "f256", "M408.781 128.007C386.356 127.578 368 146.36 368 168.79V256h-8V79.79c0-22.43-18.356-41.212-40.781-40.783C297.488 39.423 280 57.169 280 79v177h-8V40.79C272 18.36 253.644-.422 231.219.007 209.488.423 192 18.169 192 40v216h-8V80.79c0-22.43-18.356-41.212-40.781-40.783C121.488 40.423 104 58.169 104 80v235.992l-31.648-43.519c-12.993-17.866-38.009-21.817-55.877-8.823-17.865 12.994-21.815 38.01-8.822 55.877l125.601 172.705A48 48 0 0 0 172.073 512h197.59c22.274 0 41.622-15.324 46.724-37.006l26.508-112.66a192.011 192.011 0 0 0 5.104-43.975V168c.001-21.831-17.487-39.577-39.218-39.993z"],
        "arrow-circle-up": [512, 512, [], "f0aa", "M8 256C8 119 119 8 256 8s248 111 248 248-111 248-248 248S8 393 8 256zm143.6 28.9l72.4-75.5V392c0 13.3 10.7 24 24 24h16c13.3 0 24-10.7 24-24V209.4l72.4 75.5c9.3 9.7 24.8 9.9 34.3.4l10.9-11c9.4-9.4 9.4-24.6 0-33.9L273 107.7c-9.4-9.4-24.6-9.4-33.9 0L106.3 240.4c-9.4 9.4-9.4 24.6 0 33.9l10.9 11c9.6 9.5 25.1 9.3 34.4-.4z"],
        "trash-alt": [448, 512, [], "f2ed", "M268 416h24a12 12 0 0 0 12-12V188a12 12 0 0 0-12-12h-24a12 12 0 0 0-12 12v216a12 12 0 0 0 12 12zM432 80h-82.41l-34-56.7A48 48 0 0 0 274.41 0H173.59a48 48 0 0 0-41.16 23.3L98.41 80H16A16 16 0 0 0 0 96v16a16 16 0 0 0 16 16h16v336a48 48 0 0 0 48 48h288a48 48 0 0 0 48-48V128h16a16 16 0 0 0 16-16V96a16 16 0 0 0-16-16zM171.84 50.91A6 6 0 0 1 177 48h94a6 6 0 0 1 5.15 2.91L293.61 80H154.39zM368 464H80V128h288zm-212-48h24a12 12 0 0 0 12-12V188a12 12 0 0 0-12-12h-24a12 12 0 0 0-12 12v216a12 12 0 0 0 12 12z"],
        "arrow-circle-down": [512, 512, [], "f0ab", "M504 256c0 137-111 248-248 248S8 393 8 256 119 8 256 8s248 111 248 248zm-143.6-28.9L288 302.6V120c0-13.3-10.7-24-24-24h-16c-13.3 0-24 10.7-24 24v182.6l-72.4-75.5c-9.3-9.7-24.8-9.9-34.3-.4l-10.9 11c-9.4 9.4-9.4 24.6 0 33.9L239 404.3c9.4 9.4 24.6 9.4 33.9 0l132.7-132.7c9.4-9.4 9.4-24.6 0-33.9l-10.9-11c-9.5-9.5-25-9.3-34.3.4z"],
"exchange-alt": [512, 512, [], "f362", "M0 168v-16c0-13.255 10.745-24 24-24h360V80c0-21.367 25.899-32.042 40.971-16.971l80 80c9.372 9.373 9.372 24.569 0 33.941l-80 80C409.956 271.982 384 261.456 384 240v-48H24c-13.255 0-24-10.745-24-24zm488 152H128v-48c0-21.314-25.862-32.08-40.971-16.971l-80 80c-9.372 9.373-9.372 24.569 0 33.941l80 80C102.057 463.997 128 453.437 128 432v-48h360c13.255 0 24-10.745 24-24v-16c0-13.255-10.745-24-24-24z"],
"save": [448, 512, [], "f0c7", "M433.941 129.941l-83.882-83.882A48 48 0 0 0 316.118 32H48C21.49 32 0 53.49 0 80v352c0 26.51 21.49 48 48 48h352c26.51 0 48-21.49 48-48V163.882a48 48 0 0 0-14.059-33.941zM224 416c-35.346 0-64-28.654-64-64 0-35.346 28.654-64 64-64s64 28.654 64 64c0 35.346-28.654 64-64 64zm96-304.52V212c0 6.627-5.373 12-12 12H76c-6.627 0-12-5.373-12-12V108c0-6.627 5.373-12 12-12h228.52c3.183 0 6.235 1.264 8.485 3.515l3.48 3.48A11.996 11.996 0 0 1 320 111.48z"],
"upload": [512, 512, [], "f093", "M296 384h-80c-13.3 0-24-10.7-24-24V192h-87.7c-17.8 0-26.7-21.5-14.1-34.1L242.3 5.7c7.5-7.5 19.8-7.5 27.3 0l152.2 152.2c12.6 12.6 3.7 34.1-14.1 34.1H320v168c0 13.3-10.7 24-24 24zm216-8v112c0 13.3-10.7 24-24 24H24c-13.3 0-24-10.7-24-24V376c0-13.3 10.7-24 24-24h136v8c0 30.9 25.1 56 56 56h80c30.9 0 56-25.1 56-56v-8h136c13.3 0 24 10.7 24 24zm-124 88c0-11-9-20-20-20s-20 9-20 20 9 20 20 20 20-9 20-20zm64 0c0-11-9-20-20-20s-20 9-20 20 9 20 20 20 20-9 20-20z"],
"folder-open": [576, 512, [], "f07c", "M527.9 224H480v-48c0-26.5-21.5-48-48-48H272l-64-64H48C21.5 64 0 85.5 0 112v288c0 26.5 21.5 48 48 48h400c16.5 0 31.9-8.5 40.7-22.6l79.9-128c20-31.9-3-73.4-40.7-73.4zM48 118c0-3.3 2.7-6 6-6h134.1l64 64H426c3.3 0 6 2.7 6 6v42H152c-16.8 0-32.4 8.8-41.1 23.2L48 351.4zm400 282H72l77.2-128H528z"],
    "single-page": [1024, 1024, [],"double-page","M904.973 2.547c-166.174 0-301.040 75.121-301.040 168.073 0-92.952-134.82-168.073-301.040-168.073s-301.040 75.121-301.040 168.073v850.832h3.103c20.98-81.42 146.167-144.082 297.937-144.082s276.911 62.709 297.937 144.082h6.206c20.98-81.42 146.213-144.082 297.937-144.082 151.771 0 276.957 62.709 297.984 144.082h3.057v-850.832c0-92.952-134.773-168.073-301.040-168.073zM503.247 822.349c-60.162-24.083-131.439-37.653-208.412-37.653-76.881 0-148.158 13.57-208.412 37.653v-651.729c0-18.757 73.917-75.445 208.412-75.445s208.412 56.688 208.412 75.445v651.729z M395.474 225.039h-185.256c-31.957 0-57.892 25.982-57.892 57.939 0 31.864 25.936 57.892 57.892 57.892h185.256c31.957 0 57.939-26.028 57.939-57.892 0-32.003-25.982-57.939-57.939-57.939z M395.474 456.655h-185.256c-31.957 0-57.892 25.889-57.892 57.846 0 32.003 25.936 57.892 57.892 57.892h185.256c31.957 0 57.939-25.889 57.939-57.892s-25.982-57.846-57.939-57.846z M997.601 236.618h-185.256c-25.612 0-46.314 20.702-46.314 46.36 0 25.565 20.702 46.268 46.314 46.268h185.256c25.519 0 46.314-20.702 46.314-46.268 0-25.658-20.795-46.36-46.314-46.36z M997.601 468.187h-185.256c-25.612 0-46.314 20.702-46.314 46.36 0 25.565 20.702 46.314 46.314 46.314h185.256c25.519 0 46.314-20.749 46.314-46.314 0-25.658-20.795-46.36-46.314-46.36z"],
 "double-page": [1024, 1024, [],"double-page", "M395.474 225.039h-185.256c-31.957 0-57.892 25.982-57.892 57.939 0 31.864 25.936 57.892 57.892 57.892h185.256c31.957 0 57.939-26.028 57.939-57.892 0-32.003-25.982-57.939-57.939-57.939z M395.474 456.655h-185.256c-31.957 0-57.892 25.889-57.892 57.846 0 32.003 25.936 57.892 57.892 57.892h185.256c31.957 0 57.939-25.889 57.939-57.892s-25.982-57.846-57.939-57.846z M904.973 2.547c-166.174 0-301.040 75.121-301.040 168.073 0-92.952-134.82-168.073-301.040-168.073s-301.040 75.121-301.040 168.073v850.832h3.103c20.98-81.42 146.167-144.082 297.937-144.082s276.911 62.709 297.937 144.082h6.206c20.98-81.42 146.213-144.082 297.937-144.082 151.771 0 276.957 62.709 297.984 144.082h3.057v-850.832c0-92.952-134.773-168.073-301.040-168.073zM503.247 822.349c-60.162-24.083-131.439-37.653-208.412-37.653-76.881 0-148.158 13.57-208.412 37.653v-651.729c0-18.757 73.917-75.445 208.412-75.445s208.412 56.688 208.412 75.445v651.729zM1113.386 822.349c-60.162-24.083-131.439-37.653-208.412-37.653-76.881 0-148.158 13.57-208.412 37.653v-651.729c0-18.757 73.917-75.445 208.412-75.445s208.412 56.688 208.412 75.445v651.729z M997.601 236.618h-185.256c-25.612 0-46.314 20.702-46.314 46.36 0 25.565 20.702 46.268 46.314 46.268h185.256c25.519 0 46.314-20.702 46.314-46.268 0-25.658-20.795-46.36-46.314-46.36z M997.601 468.187h-185.256c-25.612 0-46.314 20.702-46.314 46.36 0 25.565 20.702 46.314 46.314 46.314h185.256c25.519 0 46.314-20.749 46.314-46.314 0-25.658-20.795-46.36-46.314-46.36z"],
 "xe900": [1024, 1024, [], "Info01_Pin" , "M434.944 294.601v-289.609c0-18.597 15.397-33.957 33.957-33.957h67.913c18.597 0 33.957 15.397 33.957 33.957v289.609c-22.034-4.206-44.709-6.601-67.931-6.601s-45.861 2.395-67.895 6.601zM502.857 921.911c-150.162 0-271.671-121.49-271.671-271.671 0-150.144 121.49-271.653 271.671-271.653 150.144 0 271.671 121.509 271.671 271.653s-121.527 271.671-271.671 271.671zM502.839 803.017c-84.37 0-152.814-68.425-152.814-152.814 0-9.545-7.424-16.969-16.969-16.969s-16.969 7.424-16.969 16.969c0 102.949 83.84 186.789 186.77 186.789 9.545 0 16.969-7.424 16.969-16.969s-7.424-16.969-16.987-17.006z" ],
 "xe901": [1024, 1024, [], "Info02_Instruction" , "M443.557 745.472l-151.973-46.519-46.501-151.954-46.501 151.954-151.991 46.519 151.991 46.519 46.501 151.973 46.501-151.973zM616.247 861.495l-57.856-17.701-17.737-57.893-17.701 57.893-57.874 17.701 57.874 17.719 17.701 57.874 17.737-57.874zM967.643 793.582l-116.955 116.937c-7.058 7.095-16.475 10.624-26.514 10.624-10.094 0-19.511-3.529-26.587-10.624l-759.515-759.497c-7.077-7.077-10.642-16.549-10.642-26.587s3.566-19.456 10.642-26.569l116.955-116.937c7.095-7.077 16.512-10.606 26.551-10.606 10.057 0 19.493 3.529 26.587 10.606l759.497 759.497c7.113 7.095 10.642 16.53 10.642 26.569s-3.547 19.511-10.661 26.587zM714.295 593.957l-63.195 63.195 173.093 173.038 63.177-63.195-173.074-173.038zM978.286 307.090l-101.248-30.994-31.067-101.321-30.976 101.321-101.358 30.994 101.358 31.013 30.976 101.303 31.067-101.303z" ],
 "xe902": [1024, 1024, [], "Info03_Aim" , "M502.875 869.632c227.84 0 412.526-184.704 412.526-412.507s-184.686-412.507-412.526-412.507-412.526 184.704-412.526 412.507 184.686 412.507 412.526 412.507zM502.875 745.874c-159.232 0-288.768-129.536-288.768-288.75 0-159.195 129.536-288.75 288.768-288.75 159.214 0 288.768 129.554 288.768 288.75 0 159.214-129.554 288.75-288.768 288.75v0zM606.007 457.125c0-56.958-46.174-103.131-103.131-103.131s-103.131 46.174-103.131 103.131c0 56.958 46.174 103.131 103.131 103.131s103.131-46.174 103.131-103.131zM440.997 691.877v206.245c0 34.194 27.685 61.879 61.879 61.879v0c34.139 0 61.879-27.685 61.879-61.879v0-206.245c0-34.194-27.739-61.879-61.879-61.879v0c-34.194 0-61.879 27.685-61.879 61.879v0zM440.997 16.165v206.245c0 34.176 27.685 61.879 61.879 61.879v0c34.139 0 61.879-27.703 61.879-61.879v0-206.245c0-34.176-27.739-61.879-61.879-61.879v0c-34.194 0-61.879 27.703-61.879 61.879v0zM737.591 395.264c-34.176 0-61.861 27.721-61.861 61.842v0c0 34.194 27.685 61.897 61.861 61.897v0h206.281c34.139 0 61.842-27.721 61.842-61.897v0c0-34.121-27.703-61.842-61.842-61.842v0h-206.281zM61.842 395.264c-34.158 0-61.842 27.703-61.842 61.879v0c0 34.158 27.685 61.842 61.842 61.842v0h206.299c34.158 0 61.897-27.703 61.897-61.842v0c0-34.176-27.739-61.879-61.897-61.879v0h-206.299z" ],
 "xe903": [1024, 1024, [], "Info04_Delivery" , "M861.55 805.778c20.133 0 37.943-14.427 41.582-34.926l92.763-526.464c4.078-23.003-11.264-44.91-34.304-48.969l-541.074-95.433c-2.505-0.457-4.974-0.658-7.424-0.658-20.114 0-37.906 14.446-41.563 34.926l-100.151 568.082 582.766 102.766c2.505 0.475 4.955 0.677 7.406 0.677zM812.635 693.723l-422.491-74.514 71.881-407.771 422.473 74.496-71.863 407.79zM724.974 541.824l-59.337 32.402-44.635-50.798-59.429 32.475-44.672-50.816-41.179 233.289 208.11 36.718zM0.713 607.982c-4.407 24.869 12.178 48.567 37.029 52.955v0l311.077 55.077c24.869 4.407 48.567-12.197 52.955-37.065v0c4.389-24.869-12.178-48.567-37.047-52.974v0l-311.058-55.022c-2.688-0.475-5.376-0.713-8.027-0.713v0c-21.742 0-41.033 15.579-44.928 37.742v0zM101.138 468.169c-4.407 24.85 12.178 48.567 37.065 52.974v0l280.357 49.554c24.85 4.37 48.585-12.215 52.974-37.065v0c4.407-24.85-12.178-48.567-37.065-52.974v0l-280.357-49.554c-2.688-0.494-5.376-0.713-8.009-0.713v0c-21.797 0-41.051 15.616-44.965 37.778v0zM201.527 328.357c-4.37 24.85 12.233 48.567 37.102 52.955v0l249.728 44.032c24.832 4.389 48.549-12.178 52.955-37.065v0c4.352-24.85-12.233-48.567-37.065-52.955v0l-249.746-44.032c-2.688-0.457-5.376-0.713-8.027-0.713v0c-21.742 0-41.033 15.598-44.946 37.778v0zM319.525 207.872c0-23.581-19.116-42.697-42.697-42.697s-42.697 19.116-42.697 42.697c0 23.581 19.116 42.697 42.697 42.697s42.697-19.116 42.697-42.697z" ],
 "xe904": [1024, 1024, [], "Info05_Character" , "M775.223 461.531c-63.726-80.366-162.011-132.114-272.347-132.114-110.299 0-208.603 51.749-272.366 132.114-92.050-52.443-117.65-196.517-117.65-324.827 0-88.96 58.514-161.463 129.81-161.463h520.375c71.278 0 129.847 72.503 129.847 161.463-0.055 128.311-25.637 272.384-117.669 324.827zM495.397 926.080c-133.449 0-241.445-108.014-241.445-241.445 0-133.449 107.995-241.445 241.445-241.445 133.467 0 241.445 107.995 241.445 241.445s-107.977 241.445-241.445 241.445zM495.415 820.462c-74.99 0-135.808-60.837-135.808-135.808 0-8.521-6.601-15.104-15.104-15.104s-15.104 6.619-15.104 15.104c0 91.465 74.533 165.979 165.998 165.979 8.503 0 15.086-6.619 15.086-15.086 0-8.503-6.601-15.104-15.067-15.086z" ],
 "xe905": [1024, 1024, [], "Info06_Geo" , "M507.045 6.784c-59.611-2.56-120.009 102.857-142.336 146.688-6.528 12.818 0.366 21.705 14.574 19.858 38.272-4.791 79.232-7.552 123.575-7.333 1.737-0.018 3.493-0.018 5.23-0.018 42.331 0 81.536 2.816 118.235 7.424 14.263 1.847 21.029-7.022 14.446-19.767-21.285-41.6-79.269-144.439-133.723-146.853zM339.401 305.061c-14.043 2.853-27.374 17.061-29.495 31.232-5.339 36.443-8.667 76.398-8.869 120.869 0.018 41.509 2.67 79.159 7.241 113.573 1.902 14.208 15.086 22.674 29.093 19.602 48.585-10.679 103.278-17.097 164.736-17.097h3.383c60.489-0.165 114.432 5.76 162.469 15.909 14.080 2.907 27.264-5.632 29.166-19.822 4.553-34.103 7.333-71.278 7.552-112.201-0.037-44.489-3.218-84.389-8.448-120.667-2.066-14.153-15.433-28.398-29.513-31.232-47.451-9.582-101.65-15.433-163.84-15.781-62.409 0.11-116.352 5.998-163.474 15.616zM19.803 528.768c-1.993 3.84-2.194 18.286 0.768 32.274 10.112 47.433 27.063 92.855 50.542 135.131 7.003 12.526 21.595 14.208 32.53 4.955 19.511-16.53 42.313-32.841 68.553-48.037 12.453-7.205 20.443-23.826 18.030-37.961-8.155-47.598-13.001-99.767-12.727-157.934-0.128-24.503 0.786-47.726 2.414-70.181 1.061-14.318-8.046-20.334-20.242-12.782-19.493 12.142-36.663 24.741-51.273 37.193-34.341 29.55-56.229 58.697-69.449 79.945-6.601 10.551-10.917 19.090-13.531 24.594-1.262 2.798-2.121 4.699-2.487 5.76-0.969 2.542-1.975 4.882-3.127 7.040zM498.944 906.423c29.294 2.578 62.245-35.694 80.018-55.186 30.427-33.189 54.363-71.991 72.558-113.006 5.815-13.111-1.353-26.789-15.47-29.513-37.723-7.369-80.914-11.813-130.56-12.032-51.822 0.256-96.53 5.065-135.497 12.965-14.025 2.834-21.083 16.585-15.177 29.659 19.2 42.661 41.454 76.142 63.25 101.943 19.438 22.894 49.792 62.427 80.878 65.17zM709.138 905.673c42.112-19.401 81.499-44.891 117.193-75.959 10.77-9.435 10.917-25.874 0-35.163-8.43-7.205-17.755-14.391-28.142-21.486-11.813-8.119-26.185-3.090-31.982 10.039-19.328 43.922-41.637 81.152-64.859 112.311-8.539 11.557-5.211 16.238 7.79 10.258zM208.658 775.863c-9.765 6.93-18.633 14.025-26.679 20.974-10.862 9.435-10.514 25.929 0.384 35.273 34.798 29.952 73.216 54.619 114.121 73.49 12.983 6.071 16.402 1.371 7.79-10.112-22.821-30.61-44.654-67.054-63.744-109.842-5.815-13.111-20.151-18.030-31.872-9.783zM834.011 650.313c26.697 15.067 49.92 31.287 69.797 47.817 11.045 9.143 25.673 7.296 32.53-5.285 22.51-41.307 38.912-85.577 48.805-131.767 2.944-14.025 2.779-28.361 0.878-32.037-1.975-3.73-8.064-17.481-15.287-29.915-16.896-29.495-52.992-81.115-124.782-125.842-12.178-7.552-21.358-1.499-20.334 12.8 1.664 22.711 2.615 46.226 2.487 71.040 0.311 57.179-4.37 108.507-12.306 155.465-2.304 14.135 5.778 30.683 18.213 37.723zM49.481 300.763c36.553-28.325 81.463-55.698 136.046-78.226 13.275-5.541 27.429-20.626 31.927-34.267 23.205-69.742 54.107-125.605 86.839-169.435 8.631-11.483 5.248-16.183-7.79-10.203-52.443 24.101-100.718 57.381-142.72 99.419-52.955 52.937-92.27 115.858-116.443 184.43-4.827 13.531 0.768 17.079 12.142 8.283zM709.138 8.594c-13.093-6.016-16.475-1.317-7.826 10.203 32.713 43.813 63.689 99.657 86.875 169.454 4.48 13.623 18.633 28.727 31.909 34.213 54.711 22.601 99.584 49.993 136.155 78.427 11.337 8.759 16.969 5.193 12.16-8.283-24.174-68.626-63.488-131.602-116.48-184.613-42.002-42.057-90.386-75.337-142.793-99.401z" ],
 "xe906": [1024, 1024, [], "Info07_Concept" , "M885.449 523.941c51.31 0 92.837-41.6 92.837-92.946s-41.527-92.928-92.837-92.928c-51.237 0-92.727 41.582-92.727 92.928-0.037 51.346 41.49 92.946 92.727 92.946zM630.382 523.941c51.237 0 92.837-41.6 92.837-92.946s-41.6-92.928-92.837-92.928c-51.291 0-92.782 41.582-92.782 92.928-0.018 51.346 41.527 92.946 92.782 92.946zM375.278 523.941c51.255 0 92.782-41.6 92.782-92.946s-41.545-92.928-92.782-92.928c-51.31 0-92.782 41.582-92.782 92.928s41.49 92.946 92.782 92.946zM502.126-18.286h-331.301c-24.96 0.256-48.037 3.438-71.168 15.909v0c-22.894 11.118-46.281 41.874-45.202 74.24v0c0.914 35.163 17.975 58.222 36.608 77.403v0c9.984 9.984 19.438 19.438 27.867 27.922v0c-57.271 78.391-91.52 175.287-91.502 279.936v0c0.037 262.619 212.553 475.41 474.697 475.447v0c170.057 0 319.433-89.691 403.054-224.274v0l0.037-0.037c17.353-27.849 8.814-64.457-18.981-81.847v0c-27.831-17.353-64.421-8.85-81.755 18.999v0c-63.049 101.102-174.647 168.302-302.354 168.265v0c-196.571-0.329-355.657-159.634-355.986-356.553v0c0-94.208 36.553-179.109 96.274-243.2v0c21.833-23.442 21.23-59.886-1.426-82.633v0c0 0-12.233-12.251-30.702-30.72v0h291.84c107.776 0 203.794 47.616 269.294 123.227v0c21.449 24.777 58.88 27.502 83.657 6.016v0c24.777-21.504 27.483-58.99 6.034-83.803v0c-86.802-100.498-215.662-164.297-358.839-164.297v0c-0.055 0-0.091 0-0.146 0v0z" ],
 "xe907": [1024, 1024, [], "Info08_Story" , "M408.923 816.896c-206.391 0-373.541-121.509-373.541-271.671 0-85.961 55.186-162.889 141.147-212.791-18.030-44.032-41.417-64.713-62.080-88.046-5.833-6.912-12.727-13.275-10.642-23.333 1.627-8.997 9.051-15.415 16.987-15.415 0.549 0 1.079 0 1.591 0 15.927 2.121 31.305 4.809 45.623 8.503 53.595 13.787 103.479 36.626 147.529 67.913 29.714-5.303 61.019-8.485 93.385-8.485 206.446 0 373.577 121.527 373.577 271.671s-167.15 271.653-373.577 271.653zM408.905 693.815c-66.121 0.037-125.605-18.853-167.461-48.219-42.021-29.55-65.627-68.041-65.591-108.928 0-10.953-8.869-19.822-19.84-19.822-10.898 0.018-19.785 8.869-19.785 19.84 1.792 114.743 126.72 196.626 272.677 196.754 10.953 0 19.84-8.85 19.84-19.803s-8.887-19.822-19.84-19.822zM845.111 196.608c18.030-44.032 41.399-64.713 62.080-88.064 5.851-6.894 12.745-13.275 10.606-23.314-2.103-9.527-10.039-16.439-18.578-15.433-15.89 2.139-31.305 4.827-45.605 8.521-53.632 13.806-103.497 36.626-147.529 67.913-29.678-5.285-61.001-8.485-93.367-8.485-96.018 0-184.101 26.514-250.423 70.016 15.36-1.042 31.305-2.103 46.683-2.103 114.085 0 221.787 32.896 304.055 92.343 88.594 64.75 137.435 152.283 137.435 247.259 0 27.593-4.224 54.656-12.233 80.658 89.71-49.353 148.078-127.872 148.078-216.503-0.055-86.528-55.241-162.926-141.202-212.809z" ],
 "xe908": [1024, 1024, [], "Info09_Culture" , "M484.553-18.779v124.526c0 9.838 8.192 17.774 18.286 17.774 10.112 0 18.304-7.936 18.304-17.774v-124.526c0-9.783-8.192-17.792-18.304-17.792-10.094 0-18.286 7.991-18.286 17.792zM411.429 16.786v88.923c0 9.819 8.174 17.792 18.286 17.792s18.286-7.973 18.286-17.792v-88.923c0-9.801-8.192-17.792-18.286-17.792s-18.286 7.991-18.286 17.792zM557.696 16.786v88.923c0 9.819 8.155 17.792 18.286 17.792s18.286-7.973 18.286-17.792v-88.923c0-9.801-8.155-17.792-18.286-17.792s-18.286 7.991-18.286 17.792zM728.85 698.606h-80.366c8.686-8.631 16.859-17.829 24.21-27.886 36.901-50.304 58.624-117.669 58.679-191.561-0.055-73.893-21.778-141.275-58.679-191.561-7.351-10.094-15.579-19.291-24.229-27.886 42.734 0 60.069 0 80.384 0 95.397 48.146 158.007 128.421 158.007 219.429 0 91.063-62.61 171.319-158.007 219.465zM609.865 639.707c-23.643 31.927-52.462 52.005-83.273 58.898h-47.47c-30.811-6.894-59.648-26.971-83.273-58.898-29.294-39.808-48.494-96.933-48.421-160.549-0.073-63.616 19.127-120.741 48.421-160.53 23.625-31.909 52.498-52.023 83.328-58.898 15.744 0 31.598 0 47.342 0 30.848 6.875 59.703 26.99 83.346 58.898 29.33 39.808 48.475 96.951 48.384 160.53 0.091 63.616-19.090 120.741-48.384 160.549zM274.286 479.159c0.037 73.911 21.797 141.257 58.661 191.561 7.351 10.057 15.579 19.255 24.229 27.886h-80.311c-95.397-48.146-158.007-128.402-158.007-219.447 0-90.99 62.61-171.264 158.007-219.41 19.383 0 36.882 0 80.311 0-8.649 8.613-16.859 17.829-24.21 27.849-36.882 50.304-58.642 117.669-58.679 191.561zM320 763.703c-30.299 0-54.839 23.899-54.839 53.358 0 29.495 24.539 53.339 54.839 53.339h365.696c30.299 0 54.875-23.863 54.875-53.339 0-29.458-24.576-53.358-54.875-53.358h-365.696zM585.6 870.4c0-44.445-37.037-80.475-82.725-80.475s-82.725 36.030-82.725 80.475c0 44.445 37.037 80.475 82.725 80.475s82.725-36.030 82.725-80.475zM320 194.67c-30.299 0-54.839-23.954-54.839-53.394 0-29.477 24.539-53.358 54.839-53.358h365.696c30.299 0 54.875 23.881 54.875 53.358 0 29.44-24.576 53.394-54.875 53.394h-365.696z" ],
 "xe909": [1024, 1024, [], "Info10_Review" , "M820.992 718.080c-29.294 0-53.029-23.753-53.029-53.047v-147.419c-0.293-146.048-119.15-264.832-265.125-265.125-146.066 0.293-264.85 119.077-265.106 265.125v147.419c0 29.294-23.735 53.047-53.047 53.047-29.275 0-52.974-23.753-52.974-53.047l-0.055-147.419c0.11-186.789 138.514-341.065 318.171-366.958v-62.885h-93.806c-29.257 0-53.010-23.735-53.010-53.010s23.735-53.029 53.010-53.029h293.65c29.294 0 53.029 23.753 53.029 53.029s-23.735 53.010-53.029 53.010h-93.824v62.885c179.639 25.929 318.080 180.187 318.153 366.958v147.419c0.018 29.294-23.735 53.047-53.010 53.047zM502.857 932.571c-94.61 0-171.319-76.709-171.319-171.337v-239.269c0-94.629 76.709-171.337 171.319-171.337 94.629 0 171.301 76.727 171.301 171.337v239.269c0 94.629-76.672 171.337-171.301 171.337zM502.857 826.551c-35.913-0.073-65.189-29.367-65.262-65.335v-186.203c0-9.765-7.936-17.701-17.664-17.701-9.783 0.018-17.719 7.954-17.719 17.719v186.185c0.037 55.57 45.111 100.626 100.645 100.663 9.765 0 17.701-7.899 17.701-17.664 0-9.783-7.936-17.664-17.701-17.664z" ],
 "xe90a": [1024, 1024, [], "Info11_Question" , "M201.911-18.286c-23.625 0.219-45.55 3.237-67.566 15.122v0c-21.815 10.551-44.105 39.881-43.081 70.656v0c0.859 33.554 17.207 55.406 34.834 73.582v0c9.179 9.179 17.902 17.92 25.746 25.765v0c-53.925 73.874-86.089 165.102-86.089 263.698v0c0 107.301 37.888 206.336 100.882 283.483v0c19.858 24.375 55.68 28.014 80.037 8.155v0c24.32-19.858 27.959-55.68 8.101-80.018v0c-47.122-57.838-75.246-131.182-75.282-211.621v0c0.037-88.558 34.414-168.338 90.642-228.517v0c20.955-22.4 20.37-57.326-1.335-79.049v0c0 0-10.88-10.898-27.465-27.483v0h273.262c144.859-0.128 268.178 91.922 315.026 220.562v0c10.715 29.531 43.337 44.745 72.85 34.030v0c29.513-10.734 44.782-43.355 34.011-72.887v0c-62.61-172.434-227.895-295.369-421.888-295.479v0h-312.686zM485.010 367.707c46.208-16.823 69.998-67.84 53.193-114.011-16.805-46.153-67.803-69.961-114.011-53.12-46.153 16.768-69.925 67.803-53.12 113.957 16.786 46.19 67.785 69.979 113.938 53.175zM478.811 503.589c12.288 28.91 45.678 42.386 74.624 30.098v0c75.483-32 162.505 3.072 194.725 78.427v0c31.963 75.575-3.072 162.542-78.482 194.816v0c-75.52 31.945-162.505-3.072-194.779-78.519v0-0.018c-12.288-28.891-45.714-42.331-74.606-30.043v0c-28.928 12.306-42.35 45.714-30.062 74.587v0c56.759 133.303 210.706 195.328 344.009 138.642v0c133.285-56.741 195.328-210.67 138.606-344.009v0c-56.741-133.248-210.67-195.291-343.973-138.624v0c-28.946 12.343-42.368 45.733-30.062 74.642v0z" ],
 "xe90b": [1024, 1024, [], "Info12_ImageInfo" , "M677.413 108.050c0-19.090-15.817-34.907-34.907-34.907h-279.296c-19.090 0-34.907 15.817-34.907 34.907v69.815c0 19.090 15.817 34.907 34.907 34.907h34.907v209.463h-34.907c-19.090 0-34.907 15.817-34.907 34.907v69.815c0 19.090 15.817 34.907 34.907 34.907h209.463c19.090 0 34.907-15.817 34.907-34.907v-314.185h34.907c19.090 0 34.907-15.817 34.907-34.907v-69.815zM607.598 701.513c0-19.090-15.817-34.907-34.907-34.907h-139.648c-19.090 0-34.907 15.817-34.907 34.907v104.722c0 19.090 15.817 34.907 34.907 34.907h139.648c19.090 0 34.907-15.817 34.907-34.907v-104.722z" ],
 "xe90c": [1024, 1024, [], "Info13_Image" , "M160 73.143c-68.242 0.183-123.227 55.168-123.429 123.41v0 521.161c0.183 68.261 55.168 123.227 123.429 123.429v0h685.714c68.242-0.201 123.209-55.168 123.429-123.429v0-521.161c-0.219-68.242-55.186-123.227-123.429-123.41v0h-685.714zM146.286 717.714v-521.161c0.037-7.168 6.546-13.714 13.714-13.714v0h685.714c7.186 0 13.678 6.546 13.678 13.714v0 521.161c0 7.168-6.491 13.696-13.678 13.714v0h-685.714c-7.168-0.018-13.696-6.546-13.714-13.714v0zM365.714 594.267c0-45.445-36.841-82.286-82.286-82.286s-82.286 36.841-82.286 82.286c0 45.445 36.841 82.286 82.286 82.286s82.286-36.841 82.286-82.286zM804.571 237.678h-603.429v82.304l137.143 137.143 68.571-68.571 219.429 219.447 178.286-178.304z" ],
 "xe90d": [1024, 1024, [], "Info14_Analysis" , "M969.435 753.006c-11.813 11.813-30.994 11.813-42.807 0l-110.263-110.263c-19.986 7.351-46.793 22.016-76.325 51.529-29.55 29.568-44.233 56.393-51.584 76.416l110.263 110.263c11.813 11.794 11.813 30.958 0 42.77s-30.958 11.813-42.789 0l-283.136-283.118c-158.427-59.191-264.503-177.426-329.819-290.761-91.026-156.288-114.176-306.341-114.926-309.906-2.505-15.963 2.743-31.963 14.171-43.429 9.545-9.582 22.29-14.793 35.566-14.793 2.615 0 5.248 0.219 7.918 0.603 3.529 0.75 153.6 23.899 309.906 114.926 113.39 65.353 231.643 171.483 290.816 330.002l283.008 282.971c11.813 11.813 11.813 30.976 0 42.789zM400.238 220.837c7.918 39.278 1.115 80.64-25.929 107.685-27.227 27.227-68.901 33.938-108.398 25.801 49.17 68.023 112.146 130.121 195.694 171.721 7.351-22.437 20.151-46.427 41.929-68.224 21.687-21.669 45.531-34.432 67.95-41.801-41.582-83.547-103.589-146.505-171.246-195.182zM746.35 572.727c-0.549 0.146-1.134 0.091-1.682 0.311-0.841 0.329-9.71 3.73-22.693 11.154-14.043 8.046-32.878 20.827-52.096 40.009-19.163 19.182-31.927 38.016-39.973 52.041-7.442 12.983-10.862 21.87-11.173 22.693-0.219 0.585-0.128 1.17-0.293 1.774l24.393 24.393c6.016-1.664 11.282-5.742 13.641-12.032 0.073 0 0.421-1.207 1.902-4.37 1.445-3.163 3.785-7.845 7.168-13.586 2.798-4.791 6.473-10.368 10.715-16.293 5.906-8.192 13.111-17.097 22.144-26.112 8.978-9.015 17.938-16.347 26.149-22.235 13.001-9.362 24.027-15.086 29.861-17.792 3.145-1.463 4.297-1.883 4.334-1.883 6.309-2.341 10.368-7.607 12.032-13.623l-24.43-24.448z" ],
 "xe90e": [1024, 1024, [], "Info15_Ans" , "M681.856 400.731c-44.398-25.326-72.21-76.672-72.21-98.158 0-16.274-12.837-35.621-30.080-35.621h-180.443c-16.512 0-27.045 25.216-27.045 41.527v33.481c0 89.911 90.295 167.241 156.361 196.901 57.947 26.039 81.975 50.505 81.975 98.085 0 41.527-54.839 78.793-115.803 78.793-33.865 0-64.64-10.514-81.207-21.595-17.993-12.617-36.059-30.427-80.384-85.358-6.107-7.552-15.104-11.977-23.278-11.977-6.747 0-12.891 2.213-18.816 5.925l-123.264 92.946c-12.873 9.563-15.799 26.021-7.607 39.333 81.115 132.974 195.438 197.559 348.837 197.559 160.969 0 341.394-126.994 341.394-297.051 0-141.166-97.079-195.456-168.43-234.789zM612.608 11.374c0-16.421-13.531-29.659-30.025-29.659h-180.48c-16.494 0-30.043 13.239-30.043 29.659v178.267c0 16.384 13.531 29.714 30.043 29.714h180.48c16.475 0 30.025-13.33 30.025-29.714v-178.267z" ],
 "xe90f": [1024, 1024, [], "Media01_Classroom" , "  M934.957 467.478c0 245.887-199.331 445.217-445.217 445.217s-445.217-199.331-445.217-445.217c0-245.887 199.331-445.217 445.217-445.217s445.217 199.331 445.217 445.217z  M670.809 62.887c-11.754 3.629-18.276 16.072-14.67 27.826 5.009 16.139 6.968 29.229 6.968 39.802-0.289 34.749-19.3 49.575-48.685 72.86-27.737 21.259-66.003 50.955-65.781 107.297 0.045 19.345 4.296 40.782 13.401 65.358 3.295 8.993 11.776 14.559 20.881 14.559 2.56 0 5.187-0.445 7.747-1.402 11.553-4.23 17.386-17.052 13.178-28.583-7.747-20.992-10.618-37.309-10.618-49.953 0.245-34.17 19.167-48.84 48.64-72.192 27.848-21.281 66.070-51.289 65.781-107.987 0-16.028-2.938-33.48-8.927-52.959-0.467-1.469-1.046-2.849-1.736-4.163-7.524-3.94-15.137-7.658-22.84-11.175-1.202 0.223-2.226 0.378-3.339 0.712z  M632.787 66.204c-0.289 34.749-19.3 49.575-48.662 72.86-27.737 21.259-66.003 50.955-65.781 107.297 0.022 19.345 4.296 40.782 13.379 65.358 3.295 8.993 11.798 14.559 20.881 14.559 2.56 0 5.165-0.445 7.725-1.402 11.553-4.23 17.408-17.052 13.201-28.583-7.769-20.992-10.641-37.309-10.641-49.953 0.245-34.17 19.189-48.84 48.64-72.192 27.871-21.281 66.093-51.289 65.781-107.987 0-0.846-0.111-1.714-0.111-2.56-15.137-7.034-30.698-13.223-46.703-18.543 1.514 7.947 2.293 15.026 2.293 21.148z  M793.489 392.348l-609.013 161.525 355.862 355.862c201.617-22.773 362.318-180.224 390.189-380.26l-137.038-137.127z  M749.924 364.611c-1.002-0.557-1.692-1.38-2.783-1.803l-377.878-148.079c-0.045-0.022-0.045 0-0.089-0.022-0.045 0-0.045 0-0.111-0.022-49.597-19.456-102.756-16.963-148.057 2.827-45.412 19.857-83.345 57.188-102.867 106.986-19.545 49.642-17.052 102.867 2.849 148.257 19.768 45.39 57.055 83.345 106.874 102.912 37.554 14.648 77.067 16.941 113.664 8.548 1.113-0.289 2.248-0.601 3.25-1.069 0.067 0 0.089 0 0.089-0.045l-0.022 0.045c29.028-7.302 60.438-6.033 90.49 5.766 29.362 11.464 52.825 31.232 69.165 55.541 1.447 2.315 3.317 4.185 5.432 5.699 0.757 2.56 1.825 5.053 3.495 7.257 20.814 27.314 49.174 49.53 83.389 62.865 49.798 19.478 103.001 17.030 148.391-2.916l0.178-0.089c45.256-19.768 83.122-57.055 102.6-106.763 19.434-49.753 16.963-102.934-2.916-148.324-18.165-41.717-51.289-77-95.143-97.569z  M769.002 451.584l-134.344 201.639 75.642 75.598c11.999-2.694 23.686-6.567 34.905-11.487l0.223-0.089c45.256-19.79 83.1-57.077 102.578-106.785 8.593-21.905 12.622-44.499 13.112-66.805l-92.115-92.071z  M500.825 376.209c-2.471 6.322-9.594 9.439-15.894 6.968l-35.706-13.958c-6.322-2.471-9.439-9.594-6.968-15.917v-0.022c2.471-6.322 9.594-9.439 15.894-6.968l35.706 13.958c6.322 2.471 9.439 9.594 6.968 15.894v0.045z  M526.714 435.667c-2.471 6.3-9.594 9.372-15.85 6.923l-35.795-14.024c-6.278-2.449-9.372-9.55-6.923-15.827l0.067-0.178c2.449-6.278 9.55-9.372 15.827-6.923l35.773 14.024c6.278 2.449 9.394 9.55 6.968 15.827l-0.067 0.178z  M483.729 483.283c-2.471 6.3-9.594 9.416-15.894 6.945l-35.684-13.98c-6.3-2.471-9.416-9.594-6.945-15.894l0.022-0.067c2.471-6.3 9.594-9.416 15.894-6.968l35.684 14.002c6.3 2.471 9.416 9.594 6.945 15.894l-0.022 0.067z  M369.597 334.581c-12.333-10.975-19.233-26.847-19.1-43.32 4.474-24.465-8.793-49.441-32.813-58.858-27.292-10.685-58.034 2.76-68.742 30.030-8.949 22.884-0.868 48.217 18.098 62.086 11.487 11.709 17.542 27.871 16.339 44.41-7.235 27.782 7.257 57.21 34.682 67.94 29.54 11.576 62.931-3.005 74.507-32.568 10.262-26.179 0-55.318-22.973-69.721z  M337.252 281.778c0 21.515-17.441 38.957-38.957 38.957s-38.957-17.441-38.957-38.957c0-21.515 17.441-38.957 38.957-38.957s38.957 17.441 38.957 38.957z  M378.635 383.176c0 21.515-17.441 38.957-38.957 38.957s-38.957-17.441-38.957-38.957c0-21.515 17.441-38.957 38.957-38.957s38.957 17.441 38.957 38.957z  M283.693 433.909c-12.021-11.264-18.521-27.336-17.942-43.787 5.075-24.353-7.546-49.642-31.343-59.659-26.98-11.375-58.079 1.291-69.476 28.294-9.55 22.639-2.093 48.15 16.518 62.509 11.175 11.999 16.807 28.294 15.226 44.789-7.925 27.603 5.788 57.411 32.924 68.831 29.251 12.333 63.021-1.469 75.331-30.675 10.908-25.912 1.38-55.318-21.237-70.3z  M252.75 379.347c0 21.515-17.441 38.957-38.957 38.957s-38.957-17.441-38.957-38.957c0-21.515 17.441-38.957 38.957-38.957s38.957 17.441 38.957 38.957z  M291.528 481.77c0 21.515-17.441 38.957-38.957 38.957s-38.957-17.441-38.957-38.957c0-21.515 17.441-38.957 38.957-38.957s38.957 17.441 38.957 38.957z  M803.974 537.8c0 68.479-55.514 123.993-123.993 123.993s-123.993-55.514-123.993-123.993c0-68.479 55.514-123.993 123.993-123.993s123.993 55.514 123.993 123.993z  M757.894 534.862l-37.532-14.714 14.759-37.554c3.317-8.526-0.89-18.232-9.439-21.571l-27.047-10.618c-8.548-3.361-18.276 0.913-21.638 9.416l-14.714 37.532-37.487-14.759c-8.481-3.339-18.254 0.935-21.615 9.461l-10.596 27.025c-3.317 8.526 0.913 18.254 9.439 21.549l37.487 14.759-14.714 37.51c-3.317 8.437 0.935 18.209 9.439 21.526l27.069 10.663c8.526 3.317 18.254-0.935 21.571-9.416l14.714-37.51 37.554 14.714c8.459 3.339 18.209-0.89 21.549-9.416l10.641-27.069c3.406-8.437-0.935-18.187-9.439-21.526z  M689.13 484.597c-2.538-0.957-2.872-3.228-0.779-4.942l17.096-13.601c2.137-1.692 4.23-0.868 4.675 1.848l3.206 21.571c0.467 2.694-1.358 4.096-3.873 3.072l-20.324-7.947z  M650.596 583.012c-2.538-1.024-4.363 0.401-3.94 3.117l3.25 21.526c0.401 2.738 2.471 3.584 4.653 1.825l17.052-13.601c2.182-1.647 1.803-3.896-0.757-4.92l-20.257-7.947z  M626.822 528.651c-1.024 2.515-3.25 2.872-4.964 0.69l-13.579-16.963c-1.714-2.159-0.89-4.296 1.848-4.719l21.482-3.25c2.738-0.423 4.185 1.358 3.161 3.896l-7.947 20.346z  M725.192 567.185c-1.002 2.538 0.445 4.363 3.183 3.896l21.459-3.25c2.738-0.401 3.539-2.471 1.848-4.653l-13.557-17.007c-1.692-2.204-3.962-1.848-4.964 0.735l-7.969 20.28z " ],
 "xe910": [1024, 1024, [], "Media02_EMap" , "M502.857 824.722c235.337 0 426.075-190.775 426.075-426.075 0-235.282-190.738-426.075-426.075-426.075s-426.075 190.793-426.075 426.075c0 235.301 190.738 426.075 426.075 426.075zM502.857 696.905c-164.48 0-298.277-133.815-298.277-298.258 0-164.425 133.797-298.24 298.277-298.24 164.462 0 298.277 133.797 298.277 298.24s-133.815 298.258-298.277 298.258v0zM594.871 503.973l-54.327-156.763-156.763-54.4 54.363 156.782 156.727 54.382zM594.871 557.221c-5.815 0-11.721-0.951-17.353-2.944l-156.745-54.327c-15.415-5.339-27.538-17.445-32.878-32.878l-54.363-156.763c-6.674-19.291-1.792-40.686 12.654-55.113 10.167-10.185 23.771-15.616 37.687-15.616 5.833 0 11.739 0.951 17.426 2.907l156.8 54.382c15.451 5.358 27.593 17.445 32.933 32.914l54.363 156.745c6.693 19.291 1.847 40.686-12.654 55.113-10.368 10.13-23.973 15.579-37.87 15.579v0zM557.495 320.146l-146.395 146.45 210.834 64.402zM396.325 835.2c0.018 58.825 47.707 106.478 106.533 106.514v0c58.843-0.037 106.514-47.707 106.533-106.514v0c-0.037-58.825-47.726-106.496-106.533-106.533v0c-58.825 0.037-106.514 47.689-106.533 106.533v0zM449.591 835.2c0.037-29.385 23.845-53.23 53.266-53.266v0c29.403 0.037 53.193 23.863 53.248 53.266v0c-0.055 29.403-23.845 53.211-53.248 53.248v0c-29.422-0.055-53.23-23.845-53.266-53.248v0zM476.233 622.793v159.762c0 14.72 11.886 26.642 26.606 26.642v0c14.72 0 26.624-11.922 26.624-26.642v0-159.762c0-14.72-11.922-26.642-26.624-26.642v0c-14.702 0-26.606 11.922-26.606 26.642v0zM476.251 14.775v159.744c0 14.738 11.886 26.642 26.606 26.642v0c14.683 0 26.606-11.904 26.606-26.642v0-159.744c0-14.738-11.922-26.679-26.606-26.679v0c-14.72 0-26.606 11.941-26.606 26.679v0z" ],
 "xe911": [1024, 1024, [], "Media03_Ani" , "M726.891 635.057c0.596 32.489-26.512 62.985-54.328 65.517-24.129 3.072-43.38 21.169-47.905 45.019-9.086 47.979-51.274 84.545-101.99 84.433-51.088 0.112-93.556-37.050-102.139-85.625-2.644-14.913-11.432-28.318-24.017-36.715s-28.337-11.338-43.101-8.099c-4.766 1.080-9.328 1.564-13.815 1.564-34.146-0.037-61.775-27.369-62.408-61.31 0.037-0.633 0.112-1.583 0.186-2.867 1.080-30.832-23.049-56.692-53.9-57.791-30.832-1.080-56.692 23.049-57.772 53.9-0.074 1.080-0.242 3.072-0.242 5.753 0.037 91.285 70.246 166.093 159.651 173.466 33.233 76.186 109.065 129.341 197.52 129.452 92.514-0.112 171.231-58.163 201.877-139.99 68.012-25.712 113.59-92.067 114.074-166.726 0.037-30.869-25.004-55.873-55.855-55.873-30.832 0-55.836 25.023-55.836 55.892zM308.596-27.136c-27.499 0-50.995 20.145-55.203 47.29l-83.298 536.539c-2.532 16.161 2.122 32.489 12.791 44.907 10.631 12.418 26.028 19.512 42.412 19.512h558.713c16.365 0 31.763-7.094 42.394-19.549 10.631-12.4 15.267-28.709 12.791-44.888l-83.279-536.52c-4.245-27.145-27.722-47.29-55.222-47.29h-392.099zM356.426 84.629h296.401l65.964 424.755h-428.33l65.964-424.755zM531.959 753.655c-1.694 2.439-3.984 4.059-7.354 4.71-0.503 0.112-1.080 0.186-1.843 0.186-3.519 0.037-6.982-1.843-8.955-4.785-5.79-8.546-17.352-10.761-25.842-5.027-8.527 5.79-10.761 17.389-4.971 25.879 8.806 13.014 23.589 21.132 39.787 21.132 2.942 0.037 6.2-0.279 9.253-0.875 13.051-2.532 23.98-10.259 30.813-20.368 5.753-8.527 3.5-20.108-5.046-25.879-3.184-2.16-6.796-3.184-10.408-3.184-5.958 0-11.841 2.867-15.434 8.211zM469.141 715.115c-6.125 2.755-12.791 4.17-19.549 4.17-5.827 0-11.785-1.117-17.482-3.333-5.232-2.029-9.737-5.064-13.796-8.546-28.169 28.43-65.015 30.534-78.271 30.627-3.444 0-5.585-0.149-6.051-0.186-10.24-0.95-17.78-10.017-16.868-20.275 0.95-10.221 10.017-17.762 20.238-16.831 0 0 0.54 0.074 2.681 0.074 10.799 0.112 42.543-3.035 58.647-27.778 5.381-8.248 8.509-19.139 20.741-19.586 10.612 0 18.916 7.931 19.251 17.985 0.149 4.319 2.718 8.229 6.963 9.83 1.415 0.577 2.681 0.801 3.947 0.801 1.527 0 3.016-0.354 4.394-0.968 9.365-4.17 20.406 0.037 24.557 9.421 4.226 9.402 0 20.387-9.402 24.595zM676.79 738.034c-3.742 0.428-7.354 0.614-10.761 0.614-29.231 0-57.251-14.41-76.949-35.523-7.224-7.745-16.961-18.134-13.349-29.659 3.072-9.812 13.535-15.248 23.329-12.139 1.192 0.391 2.458 0.577 3.761 0.577 3.631-0.037 7.056-1.452 9.7-4.487 2.029-2.402 2.942-5.213 2.979-8.192 0 0-0.037-0.689-0.074-2.104-0.242-10.277 7.931-18.767 18.227-19.009 10.501 0 18.786 8.080 19.009 18.209 0 0.354 0.074 1.266 0.074 2.904 0.037 11.413-3.947 23.068-11.916 32.377-2.867 3.351-6.163 6.088-9.663 8.509 9.346 6.2 21.336 11.506 34.853 11.301 2.104 0 4.226-0.112 6.442-0.354 10.203-1.192 19.437 6.088 20.648 16.31 1.192 10.221-6.125 19.493-16.31 20.666zM603.695 290.081l-159.372-98.695c-11.581-7.596-21.113-1.992-21.113 12.437v191.711c0 14.466 9.551 20.033 21.187 12.437l159.353-98.732c-0.056 0 5.641-4.003 5.641-9.57-0.019-5.604-5.697-9.588-5.697-9.588z" ],
 "xe912": [1024, 1024, [], "Media04_Movie" , "M27.429 164.571v585.125c0 30.281 24.558 54.857 54.857 54.857s54.857-24.576 54.857-54.857v-585.125c0-30.226-24.558-54.857-54.857-54.857s-54.857 24.631-54.857 54.857zM288 621.714c-30.299 0-54.857 24.539-54.857 54.857 0 30.299 24.539 54.857 54.857 54.857h438.839c30.318 0 54.912-24.521 54.912-54.857s-24.594-54.857-54.912-54.857h-438.839zM86.857 685.714c-15.177 0-27.447 12.27-27.447 27.429s12.27 27.429 27.447 27.429h169.143c15.141 0 27.447-12.27 27.447-27.41 0-15.159-12.306-27.429-27.447-27.429l-169.143-0.018zM86.857 557.714c-15.177 0-27.447 12.27-27.447 27.429s12.27 27.429 27.447 27.429h169.143c15.141 0 27.429-12.27 27.429-27.41 0-15.159-12.306-27.429-27.429-27.429l-169.143-0.018zM86.857 429.714c-15.177 0-27.447 12.288-27.447 27.447 0 15.141 12.27 27.41 27.447 27.41h169.143c15.122 0 27.429-12.27 27.429-27.41 0-15.159-12.306-27.447-27.429-27.447h-169.143zM86.857 301.714c-15.177 0-27.447 12.306-27.447 27.447s12.27 27.41 27.447 27.41h169.143c15.141 0 27.429-12.27 27.429-27.41s-12.288-27.447-27.429-27.447h-169.143zM86.857 173.733c-15.177 0-27.447 12.306-27.447 27.447s12.27 27.41 27.447 27.41h169.143c15.141 0 27.41-12.27 27.41-27.41s-12.27-27.447-27.41-27.447h-169.143zM749.696 685.714c-15.159 0-27.392 12.288-27.392 27.429s12.233 27.429 27.392 27.429h169.161c15.141 0 27.447-12.288 27.447-27.429s-12.306-27.429-27.447-27.429h-169.161zM749.696 557.714c-15.159 0-27.392 12.288-27.392 27.429s12.233 27.429 27.392 27.429h169.161c15.141 0 27.447-12.288 27.447-27.429s-12.306-27.429-27.447-27.429h-169.161zM749.696 429.714c-15.159 0-27.392 12.288-27.392 27.447 0 15.141 12.233 27.429 27.392 27.429h169.161c15.141 0 27.447-12.288 27.447-27.429 0-15.159-12.306-27.447-27.447-27.447h-169.161zM749.696 301.714c-15.159 0-27.392 12.288-27.392 27.447 0 15.141 12.233 27.429 27.392 27.429h169.161c15.141 0 27.447-12.288 27.447-27.429 0-15.159-12.306-27.447-27.447-27.447h-169.161zM749.696 173.733c-15.159 0-27.392 12.288-27.392 27.447 0 15.141 12.233 27.429 27.392 27.429h169.161c15.141 0 27.447-12.288 27.447-27.429 0-15.159-12.306-27.447-27.447-27.447h-169.161zM288 402.304c-30.299 0-54.857 24.558-54.857 54.857s24.539 54.857 54.857 54.857h438.839c30.318 0 54.912-24.558 54.912-54.857s-24.594-54.857-54.912-54.857h-438.839zM288 182.912c-30.318 0-54.857 24.539-54.857 54.821 0 30.318 24.558 54.857 54.857 54.857h438.839c30.263 0 54.875-24.539 54.875-54.857 0-30.281-24.613-54.821-54.875-54.821h-438.839zM210.267 164.571v585.125c0 30.281 24.576 54.857 54.857 54.857 30.336 0 54.857-24.576 54.857-54.857v-585.125c0-30.226-24.521-54.857-54.857-54.857-30.299 0-54.857 24.631-54.857 54.857zM685.714 164.571v585.125c0 30.281 24.558 54.857 54.857 54.857 30.281 0 54.857-24.576 54.857-54.857v-585.125c0-30.226-24.576-54.857-54.857-54.857-30.299 0-54.857 24.631-54.857 54.857zM868.553 164.608v585.106c0 30.318 24.576 54.857 54.894 54.857 30.263 0 54.839-24.539 54.839-54.857v-585.106c0-30.299-24.576-54.857-54.839-54.857-30.318 0-54.894 24.558-54.894 54.857z" ],
 "xe913": [1024, 1024, [], "Media05_Gallery" , "M969.143 621.714v-457.143c0-60.581-49.152-109.714-109.714-109.714h-713.143c-60.581 0-109.714 49.152-109.714 109.714v603.429c0 60.581 49.134 109.714 109.714 109.714h256c30.299 0 62.848-23.241 72.704-51.877l32.439-94.409h352c60.581 0 109.714-49.134 109.714-109.714zM378.843 768h-232.558v-603.429h713.143v457.143h-352c-46.848 0-88.521 29.751-103.753 74.039l-24.832 72.247zM383.799 546.578c0-33.407-27.082-60.489-60.489-60.489s-60.489 27.082-60.489 60.489c0 33.407 27.082 60.489 60.489 60.489s60.489-27.082 60.489-60.489zM797.714 229.687h-589.714v115.31l119.058 100.791 105.253-68.681 216.101 179.529 149.303-131.035z" ],
 "xe914": [1024, 1024, [], "Media06_Map" , "M971.429 900.937c-4.187 2.798-8.942 4.187-13.751 4.187-3.2 0-6.418-0.622-9.527-1.865l-257.17-95.397-366.903 95.378c-3.090 1.353-6.217 2.030-9.307 2.030-3.109 0-6.217-0.677-9.344-2.030l-266.496-99.291c-9.307-3.474-15.506-12.763-15.506-22.875v-747.227c0-8.064 4.261-15.89 10.862-20.535 4.261-2.67 8.923-4.206 13.989-4.206 3.109 0 6.199 0.366 9.289 1.902l257.189 95.397 366.866-95.397c3.109-1.353 6.235-1.993 9.344-1.993 3.090 0 6.199 0.64 9.289 1.993l266.496 99.328c9.326 3.438 15.543 12.745 15.543 22.894v747.154c0 8.119-4.315 15.89-10.862 20.553zM133.157 159.323v564.151l144.841 50.633v-564.261l-3.913-1.573-140.928-48.951zM332.891 217.326v564.279l328.759-80.165v-564.297l-306.213 71.15-22.546 9.033zM872.594 190.793l-156.069-55.113v564.224l156.069 55.022v-564.133z" ],
 "xe915": [1024, 1024, [], "Media07_Explanation" , "M936.759 622.738h-157.349l-8.631 42.057c-6.985 34.030-36.937 58.459-71.662 58.459h-212.37l-38.912 54.619c-13.733 19.273-35.913 30.702-59.575 30.702h-274.286c-21.614 0-42.094-9.527-55.991-26.057s-19.785-38.345-16.073-59.63l97.518-560.768c6.107-35.017 36.498-60.581 72.046-60.581h585.161c21.961 0 42.77 9.874 56.667 26.898 10.77 13.202 16.329 29.55 16.329 46.245 0.091 0 107.593 395.118 107.593 395.118 7.954 29.239-10.149 52.937-40.466 52.937zM211.493 174.683l-97.518 560.75h274.286l60.8-85.321h250.057l5.632-27.374h-54.473c-10.112 0-21.925-7.333-26.423-16.384l-22.181-44.581h-237.787c-30.299 0-60.855-23.826-68.261-53.193l-84.133-333.897zM891.008 495.726l-83.621-307.529c-2.176-7.954-9.454-13.495-17.682-13.495l-460.562-0.037c-10.112 0-18.286 8.21-18.286 18.322s8.174 18.286 18.286 18.286h446.574l80.018 294.034c2.651 9.765 12.69 15.488 22.437 12.855 9.746-2.651 15.506-12.709 12.837-22.437z" ]




    };

    bunker(function() {
        defineIcons('fab', icons);
    });

}());


(function() {
    'use strict';

    function _typeof(obj) {
        if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
            _typeof = function(obj) {
                return typeof obj;
            };
        } else {
            _typeof = function(obj) {
                return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
            };
        }

        return _typeof(obj);
    }

    function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
            throw new TypeError("Cannot call a class as a function");
        }
    }

    function _defineProperties(target, props) {
        for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ("value" in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
        }
    }

    function _createClass(Constructor, protoProps, staticProps) {
        if (protoProps) _defineProperties(Constructor.prototype, protoProps);
        if (staticProps) _defineProperties(Constructor, staticProps);
        return Constructor;
    }

    function _defineProperty(obj, key, value) {
        if (key in obj) {
            Object.defineProperty(obj, key, {
                value: value,
                enumerable: true,
                configurable: true,
                writable: true
            });
        } else {
            obj[key] = value;
        }

        return obj;
    }

    function _objectSpread(target) {
        for (var i = 1; i < arguments.length; i++) {
            var source = arguments[i] != null ? arguments[i] : {};
            var ownKeys = Object.keys(source);

            if (typeof Object.getOwnPropertySymbols === 'function') {
                ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                    return Object.getOwnPropertyDescriptor(source, sym).enumerable;
                }));
            }

            ownKeys.forEach(function(key) {
                _defineProperty(target, key, source[key]);
            });
        }

        return target;
    }

    function _slicedToArray(arr, i) {
        return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest();
    }

    function _toConsumableArray(arr) {
        return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread();
    }

    function _arrayWithoutHoles(arr) {
        if (Array.isArray(arr)) {
            for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) arr2[i] = arr[i];

            return arr2;
        }
    }

    function _arrayWithHoles(arr) {
        if (Array.isArray(arr)) return arr;
    }

    function _iterableToArray(iter) {
        if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === "[object Arguments]") return Array.from(iter);
    }

    function _iterableToArrayLimit(arr, i) {
        var _arr = [];
        var _n = true;
        var _d = false;
        var _e = undefined;

        try {
            for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {
                _arr.push(_s.value);

                if (i && _arr.length === i) break;
            }
        } catch (err) {
            _d = true;
            _e = err;
        } finally {
            try {
                if (!_n && _i["return"] != null) _i["return"]();
            } finally {
                if (_d) throw _e;
            }
        }

        return _arr;
    }

    function _nonIterableSpread() {
        throw new TypeError("Invalid attempt to spread non-iterable instance");
    }

    function _nonIterableRest() {
        throw new TypeError("Invalid attempt to destructure non-iterable instance");
    }

    var noop = function noop() {};

    var _WINDOW = {};
    var _DOCUMENT = {};
    var _MUTATION_OBSERVER = null;
    var _PERFORMANCE = {
        mark: noop,
        measure: noop
    };

    try {
        if (typeof window !== 'undefined') _WINDOW = window;
        if (typeof document !== 'undefined') _DOCUMENT = document;
        if (typeof MutationObserver !== 'undefined') _MUTATION_OBSERVER = MutationObserver;
        if (typeof performance !== 'undefined') _PERFORMANCE = performance;
    } catch (e) {}

    var _ref = _WINDOW.navigator || {},
        _ref$userAgent = _ref.userAgent,
        userAgent = _ref$userAgent === void 0 ? '' : _ref$userAgent;

    var WINDOW = _WINDOW;
    var DOCUMENT = _DOCUMENT;
    var MUTATION_OBSERVER = _MUTATION_OBSERVER;
    var PERFORMANCE = _PERFORMANCE;
    var IS_BROWSER = !!WINDOW.document;
    var IS_DOM = !!DOCUMENT.documentElement && !!DOCUMENT.head && typeof DOCUMENT.addEventListener === 'function' && typeof DOCUMENT.createElement === 'function';
    var IS_IE = ~userAgent.indexOf('MSIE') || ~userAgent.indexOf('Trident/');

    var NAMESPACE_IDENTIFIER = '___FONT_AWESOME___';
    var UNITS_IN_GRID = 16;
    var DEFAULT_FAMILY_PREFIX = 'fa';
    var DEFAULT_REPLACEMENT_CLASS = 'svg-inline--fa';
    var DATA_FA_I2SVG = 'data-fa-i2svg';
    var DATA_FA_PSEUDO_ELEMENT = 'data-fa-pseudo-element';
    var DATA_FA_PSEUDO_ELEMENT_PENDING = 'data-fa-pseudo-element-pending';
    var DATA_PREFIX = 'data-prefix';
    var DATA_ICON = 'data-icon';
    var HTML_CLASS_I2SVG_BASE_CLASS = 'fontawesome-i2svg';
    var MUTATION_APPROACH_ASYNC = 'async';
    var TAGNAMES_TO_SKIP_FOR_PSEUDOELEMENTS = ['HTML', 'HEAD', 'STYLE', 'SCRIPT'];
    var PRODUCTION = function() {
        try {
            return "production" === 'production';
        } catch (e) {
            return false;
        }
    }();
    var PREFIX_TO_STYLE = {
        'fas': 'solid',
        'far': 'regular',
        'fal': 'light',
        'fad': 'duotone',
        'fab': 'brands',
        'fa': 'solid'
    };
    var STYLE_TO_PREFIX = {
        'solid': 'fas',
        'regular': 'far',
        'light': 'fal',
        'duotone': 'fad',
        'brands': 'fab'
    };
    var LAYERS_TEXT_CLASSNAME = 'fa-layers-text';
    var FONT_FAMILY_PATTERN = /Font Awesome 5 (Solid|Regular|Light|Duotone|Brands|Free|Pro)/;
    var FONT_WEIGHT_TO_PREFIX = {
        '900': 'fas',
        '400': 'far',
        'normal': 'far',
        '300': 'fal'
    };
    var oneToTen = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];
    var oneToTwenty = oneToTen.concat([11, 12, 13, 14, 15, 16, 17, 18, 19, 20]);
    var ATTRIBUTES_WATCHED_FOR_MUTATION = ['class', 'data-prefix', 'data-icon', 'data-fa-transform', 'data-fa-mask'];
    var DUOTONE_CLASSES = {
        GROUP: 'group',
        SWAP_OPACITY: 'swap-opacity',
        PRIMARY: 'primary',
        SECONDARY: 'secondary'
    };
    var RESERVED_CLASSES = ['xs', 'sm', 'lg', 'fw', 'ul', 'li', 'border', 'pull-left', 'pull-right', 'spin', 'pulse', 'rotate-90', 'rotate-180', 'rotate-270', 'flip-horizontal', 'flip-vertical', 'flip-both', 'stack', 'stack-1x', 'stack-2x', 'inverse', 'layers', 'layers-text', 'layers-counter', DUOTONE_CLASSES.GROUP, DUOTONE_CLASSES.SWAP_OPACITY, DUOTONE_CLASSES.PRIMARY, DUOTONE_CLASSES.SECONDARY].concat(oneToTen.map(function(n) {
        return "".concat(n, "x");
    })).concat(oneToTwenty.map(function(n) {
        return "w-".concat(n);
    }));

    var initial = WINDOW.FontAwesomeConfig || {};

    function getAttrConfig(attr) {
        var element = DOCUMENT.querySelector('script[' + attr + ']');

        if (element) {
            return element.getAttribute(attr);
        }
    }

    function coerce(val) {
        // Getting an empty string will occur if the attribute is set on the HTML tag but without a value
        // We'll assume that this is an indication that it should be toggled to true
        // For example <script data-search-pseudo-elements src="..."></script>
        if (val === '') return true;
        if (val === 'false') return false;
        if (val === 'true') return true;
        return val;
    }

    if (DOCUMENT && typeof DOCUMENT.querySelector === 'function') {
        var attrs = [
            ['data-family-prefix', 'familyPrefix'],
            ['data-replacement-class', 'replacementClass'],
            ['data-auto-replace-svg', 'autoReplaceSvg'],
            ['data-auto-add-css', 'autoAddCss'],
            ['data-auto-a11y', 'autoA11y'],
            ['data-search-pseudo-elements', 'searchPseudoElements'],
            ['data-observe-mutations', 'observeMutations'],
            ['data-mutate-approach', 'mutateApproach'],
            ['data-keep-original-source', 'keepOriginalSource'],
            ['data-measure-performance', 'measurePerformance'],
            ['data-show-missing-icons', 'showMissingIcons']
        ];
        attrs.forEach(function(_ref) {
            var _ref2 = _slicedToArray(_ref, 2),
                attr = _ref2[0],
                key = _ref2[1];

            var val = coerce(getAttrConfig(attr));

            if (val !== undefined && val !== null) {
                initial[key] = val;
            }
        });
    }

    var _default = {
        familyPrefix: DEFAULT_FAMILY_PREFIX,
        replacementClass: DEFAULT_REPLACEMENT_CLASS,
        autoReplaceSvg: true,
        autoAddCss: true,
        autoA11y: true,
        searchPseudoElements: false,
        observeMutations: true,
        mutateApproach: 'async',
        keepOriginalSource: true,
        measurePerformance: false,
        showMissingIcons: true
    };

    var _config = _objectSpread({}, _default, initial);

    if (!_config.autoReplaceSvg) _config.observeMutations = false;

    var config = _objectSpread({}, _config);

    WINDOW.FontAwesomeConfig = config;

    var w = WINDOW || {};
    if (!w[NAMESPACE_IDENTIFIER]) w[NAMESPACE_IDENTIFIER] = {};
    if (!w[NAMESPACE_IDENTIFIER].styles) w[NAMESPACE_IDENTIFIER].styles = {};
    if (!w[NAMESPACE_IDENTIFIER].hooks) w[NAMESPACE_IDENTIFIER].hooks = {};
    if (!w[NAMESPACE_IDENTIFIER].shims) w[NAMESPACE_IDENTIFIER].shims = [];
    var namespace = w[NAMESPACE_IDENTIFIER];

    var functions = [];

    var listener = function listener() {
        DOCUMENT.removeEventListener('DOMContentLoaded', listener);
        loaded = 1;
        functions.map(function(fn) {
            return fn();
        });
    };

    var loaded = false;

    if (IS_DOM) {
        loaded = (DOCUMENT.documentElement.doScroll ? /^loaded|^c/ : /^loaded|^i|^c/).test(DOCUMENT.readyState);
        if (!loaded) DOCUMENT.addEventListener('DOMContentLoaded', listener);
    }

    function domready(fn) {
        if (!IS_DOM) return;
        loaded ? setTimeout(fn, 0) : functions.push(fn);
    }

    var PENDING = 'pending';
    var SETTLED = 'settled';
    var FULFILLED = 'fulfilled';
    var REJECTED = 'rejected';

    var NOOP = function NOOP() {};

    var isNode = typeof global !== 'undefined' && typeof global.process !== 'undefined' && typeof global.process.emit === 'function';
    var asyncSetTimer = typeof setImmediate === 'undefined' ? setTimeout : setImmediate;
    var asyncQueue = [];
    var asyncTimer;

    function asyncFlush() {
        // run promise callbacks
        for (var i = 0; i < asyncQueue.length; i++) {
            asyncQueue[i][0](asyncQueue[i][1]);
        } // reset async asyncQueue


        asyncQueue = [];
        asyncTimer = false;
    }

    function asyncCall(callback, arg) {
        asyncQueue.push([callback, arg]);

        if (!asyncTimer) {
            asyncTimer = true;
            asyncSetTimer(asyncFlush, 0);
        }
    }

    function invokeResolver(resolver, promise) {
        function resolvePromise(value) {
            resolve(promise, value);
        }

        function rejectPromise(reason) {
            reject(promise, reason);
        }

        try {
            resolver(resolvePromise, rejectPromise);
        } catch (e) {
            rejectPromise(e);
        }
    }

    function invokeCallback(subscriber) {
        var owner = subscriber.owner;
        var settled = owner._state;
        var value = owner._data;
        var callback = subscriber[settled];
        var promise = subscriber.then;

        if (typeof callback === 'function') {
            settled = FULFILLED;

            try {
                value = callback(value);
            } catch (e) {
                reject(promise, e);
            }
        }

        if (!handleThenable(promise, value)) {
            if (settled === FULFILLED) {
                resolve(promise, value);
            }

            if (settled === REJECTED) {
                reject(promise, value);
            }
        }
    }

    function handleThenable(promise, value) {
        var resolved;

        try {
            if (promise === value) {
                throw new TypeError('A promises callback cannot return that same promise.');
            }

            if (value && (typeof value === 'function' || _typeof(value) === 'object')) {
                // then should be retrieved only once
                var then = value.then;

                if (typeof then === 'function') {
                    then.call(value, function(val) {
                        if (!resolved) {
                            resolved = true;

                            if (value === val) {
                                fulfill(promise, val);
                            } else {
                                resolve(promise, val);
                            }
                        }
                    }, function(reason) {
                        if (!resolved) {
                            resolved = true;
                            reject(promise, reason);
                        }
                    });
                    return true;
                }
            }
        } catch (e) {
            if (!resolved) {
                reject(promise, e);
            }

            return true;
        }

        return false;
    }

    function resolve(promise, value) {
        if (promise === value || !handleThenable(promise, value)) {
            fulfill(promise, value);
        }
    }

    function fulfill(promise, value) {
        if (promise._state === PENDING) {
            promise._state = SETTLED;
            promise._data = value;
            asyncCall(publishFulfillment, promise);
        }
    }

    function reject(promise, reason) {
        if (promise._state === PENDING) {
            promise._state = SETTLED;
            promise._data = reason;
            asyncCall(publishRejection, promise);
        }
    }

    function publish(promise) {
        promise._then = promise._then.forEach(invokeCallback);
    }

    function publishFulfillment(promise) {
        promise._state = FULFILLED;
        publish(promise);
    }

    function publishRejection(promise) {
        promise._state = REJECTED;
        publish(promise);

        if (!promise._handled && isNode) {
            global.process.emit('unhandledRejection', promise._data, promise);
        }
    }

    function notifyRejectionHandled(promise) {
        global.process.emit('rejectionHandled', promise);
    }
    /**
     * @class
     */


    function P(resolver) {
        if (typeof resolver !== 'function') {
            throw new TypeError('Promise resolver ' + resolver + ' is not a function');
        }

        if (this instanceof P === false) {
            throw new TypeError('Failed to construct \'Promise\': Please use the \'new\' operator, this object constructor cannot be called as a function.');
        }

        this._then = [];
        invokeResolver(resolver, this);
    }

    P.prototype = {
        constructor: P,
        _state: PENDING,
        _then: null,
        _data: undefined,
        _handled: false,
        then: function then(onFulfillment, onRejection) {
            var subscriber = {
                owner: this,
                then: new this.constructor(NOOP),
                fulfilled: onFulfillment,
                rejected: onRejection
            };

            if ((onRejection || onFulfillment) && !this._handled) {
                this._handled = true;

                if (this._state === REJECTED && isNode) {
                    asyncCall(notifyRejectionHandled, this);
                }
            }

            if (this._state === FULFILLED || this._state === REJECTED) {
                // already resolved, call callback async
                asyncCall(invokeCallback, subscriber);
            } else {
                // subscribe
                this._then.push(subscriber);
            }

            return subscriber.then;
        },
        catch: function _catch(onRejection) {
            return this.then(null, onRejection);
        }
    };

    P.all = function(promises) {
        if (!Array.isArray(promises)) {
            throw new TypeError('You must pass an array to Promise.all().');
        }

        return new P(function(resolve, reject) {
            var results = [];
            var remaining = 0;

            function resolver(index) {
                remaining++;
                return function(value) {
                    results[index] = value;

                    if (!--remaining) {
                        resolve(results);
                    }
                };
            }

            for (var i = 0, promise; i < promises.length; i++) {
                promise = promises[i];

                if (promise && typeof promise.then === 'function') {
                    promise.then(resolver(i), reject);
                } else {
                    results[i] = promise;
                }
            }

            if (!remaining) {
                resolve(results);
            }
        });
    };

    P.race = function(promises) {
        if (!Array.isArray(promises)) {
            throw new TypeError('You must pass an array to Promise.race().');
        }

        return new P(function(resolve, reject) {
            for (var i = 0, promise; i < promises.length; i++) {
                promise = promises[i];

                if (promise && typeof promise.then === 'function') {
                    promise.then(resolve, reject);
                } else {
                    resolve(promise);
                }
            }
        });
    };

    P.resolve = function(value) {
        if (value && _typeof(value) === 'object' && value.constructor === P) {
            return value;
        }

        return new P(function(resolve) {
            resolve(value);
        });
    };

    P.reject = function(reason) {
        return new P(function(resolve, reject) {
            reject(reason);
        });
    };

    var picked = typeof Promise === 'function' ? Promise : P;

    var d = UNITS_IN_GRID;
    var meaninglessTransform = {
        size: 16,
        x: 0,
        y: 0,
        rotate: 0,
        flipX: false,
        flipY: false
    };

    function isReserved(name) {
        return ~RESERVED_CLASSES.indexOf(name);
    }

    function bunker(fn) {
        try {
            fn();
        } catch (e) {
            if (!PRODUCTION) {
                throw e;
            }
        }
    }

    function insertCss(css) {
        if (!css || !IS_DOM) {
            return;
        }

        var style = DOCUMENT.createElement('style');
        style.setAttribute('type', 'text/css');
        style.innerHTML = css;
        var headChildren = DOCUMENT.head.childNodes;
        var beforeChild = null;

        for (var i = headChildren.length - 1; i > -1; i--) {
            var child = headChildren[i];
            var tagName = (child.tagName || '').toUpperCase();

            if (['STYLE', 'LINK'].indexOf(tagName) > -1) {
                beforeChild = child;
            }
        }

        DOCUMENT.head.insertBefore(style, beforeChild);
        return css;
    }
    var idPool = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';

    function nextUniqueId() {
        var size = 12;
        var id = '';

        while (size-- > 0) {
            id += idPool[Math.random() * 62 | 0];
        }

        return id;
    }

    function toArray(obj) {
        var array = [];

        for (var i = (obj || []).length >>> 0; i--;) {
            array[i] = obj[i];
        }

        return array;
    }

    function classArray(node) {
        if (node.classList) {
            return toArray(node.classList);
        } else {
            return (node.getAttribute('class') || '').split(' ').filter(function(i) {
                return i;
            });
        }
    }

    function getIconName(familyPrefix, cls) {
        var parts = cls.split('-');
        var prefix = parts[0];
        var iconName = parts.slice(1).join('-');

        if (prefix === familyPrefix && iconName !== '' && !isReserved(iconName)) {
            return iconName;
        } else {
            return null;
        }
    }

    function htmlEscape(str) {
        return "".concat(str).replace(/&/g, '&amp;').replace(/"/g, '&quot;').replace(/'/g, '&#39;').replace(/</g, '&lt;').replace(/>/g, '&gt;');
    }

    function joinAttributes(attributes) {
        return Object.keys(attributes || {}).reduce(function(acc, attributeName) {
            return acc + "".concat(attributeName, "=\"").concat(htmlEscape(attributes[attributeName]), "\" ");
        }, '').trim();
    }

    function joinStyles(styles) {
        return Object.keys(styles || {}).reduce(function(acc, styleName) {
            return acc + "".concat(styleName, ": ").concat(styles[styleName], ";");
        }, '');
    }

    function transformIsMeaningful(transform) {
        return transform.size !== meaninglessTransform.size || transform.x !== meaninglessTransform.x || transform.y !== meaninglessTransform.y || transform.rotate !== meaninglessTransform.rotate || transform.flipX || transform.flipY;
    }

    function transformForSvg(_ref) {
        var transform = _ref.transform,
            containerWidth = _ref.containerWidth,
            iconWidth = _ref.iconWidth;
        var outer = {
            transform: "translate(".concat(containerWidth / 2, " 256)")
        };
        var innerTranslate = "translate(".concat(transform.x * 32, ", ").concat(transform.y * 32, ") ");
        var innerScale = "scale(".concat(transform.size / 16 * (transform.flipX ? -1 : 1), ", ").concat(transform.size / 16 * (transform.flipY ? -1 : 1), ") ");
        var innerRotate = "rotate(".concat(transform.rotate, " 0 0)");
        var inner = {
            transform: "".concat(innerTranslate, " ").concat(innerScale, " ").concat(innerRotate)
        };
        var path = {
            transform: "translate(".concat(iconWidth / 2 * -1, " -256)")
        };
        return {
            outer: outer,
            inner: inner,
            path: path
        };
    }

    function transformForCss(_ref2) {
        var transform = _ref2.transform,
            _ref2$width = _ref2.width,
            width = _ref2$width === void 0 ? UNITS_IN_GRID : _ref2$width,
            _ref2$height = _ref2.height,
            height = _ref2$height === void 0 ? UNITS_IN_GRID : _ref2$height,
            _ref2$startCentered = _ref2.startCentered,
            startCentered = _ref2$startCentered === void 0 ? false : _ref2$startCentered;
        var val = '';

        if (startCentered && IS_IE) {
            val += "translate(".concat(transform.x / d - width / 2, "em, ").concat(transform.y / d - height / 2, "em) ");
        } else if (startCentered) {
            val += "translate(calc(-50% + ".concat(transform.x / d, "em), calc(-50% + ").concat(transform.y / d, "em)) ");
        } else {
            val += "translate(".concat(transform.x / d, "em, ").concat(transform.y / d, "em) ");
        }

        val += "scale(".concat(transform.size / d * (transform.flipX ? -1 : 1), ", ").concat(transform.size / d * (transform.flipY ? -1 : 1), ") ");
        val += "rotate(".concat(transform.rotate, "deg) ");
        return val;
    }

    var ALL_SPACE = {
        x: 0,
        y: 0,
        width: '100%',
        height: '100%'
    };

    function fillBlack(abstract) {
        var force = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;

        if (abstract.attributes && (abstract.attributes.fill || force)) {
            abstract.attributes.fill = 'black';
        }

        return abstract;
    }

    function deGroup(abstract) {
        if (abstract.tag === 'g') {
            return abstract.children;
        } else {
            return [abstract];
        }
    }

    function makeIconMasking(_ref) {
        var children = _ref.children,
            attributes = _ref.attributes,
            main = _ref.main,
            mask = _ref.mask,
            transform = _ref.transform;
        var mainWidth = main.width,
            mainPath = main.icon;
        var maskWidth = mask.width,
            maskPath = mask.icon;
        var trans = transformForSvg({
            transform: transform,
            containerWidth: maskWidth,
            iconWidth: mainWidth
        });
        var maskRect = {
            tag: 'rect',
            attributes: _objectSpread({}, ALL_SPACE, {
                fill: 'white'
            })
        };
        var maskInnerGroupChildrenMixin = mainPath.children ? {
            children: mainPath.children.map(fillBlack)
        } : {};
        var maskInnerGroup = {
            tag: 'g',
            attributes: _objectSpread({}, trans.inner),
            children: [fillBlack(_objectSpread({
                tag: mainPath.tag,
                attributes: _objectSpread({}, mainPath.attributes, trans.path)
            }, maskInnerGroupChildrenMixin))]
        };
        var maskOuterGroup = {
            tag: 'g',
            attributes: _objectSpread({}, trans.outer),
            children: [maskInnerGroup]
        };
        var maskId = "mask-".concat(nextUniqueId());
        var clipId = "clip-".concat(nextUniqueId());
        var maskTag = {
            tag: 'mask',
            attributes: _objectSpread({}, ALL_SPACE, {
                id: maskId,
                maskUnits: 'userSpaceOnUse',
                maskContentUnits: 'userSpaceOnUse'
            }),
            children: [maskRect, maskOuterGroup]
        };
        var defs = {
            tag: 'defs',
            children: [{
                tag: 'clipPath',
                attributes: {
                    id: clipId
                },
                children: deGroup(maskPath)
            }, maskTag]
        };
        children.push(defs, {
            tag: 'rect',
            attributes: _objectSpread({
                fill: 'currentColor',
                'clip-path': "url(#".concat(clipId, ")"),
                mask: "url(#".concat(maskId, ")")
            }, ALL_SPACE)
        });
        return {
            children: children,
            attributes: attributes
        };
    }

    function makeIconStandard(_ref) {
        var children = _ref.children,
            attributes = _ref.attributes,
            main = _ref.main,
            transform = _ref.transform,
            styles = _ref.styles;
        var styleString = joinStyles(styles);

        if (styleString.length > 0) {
            attributes['style'] = styleString;
        }

        if (transformIsMeaningful(transform)) {
            var trans = transformForSvg({
                transform: transform,
                containerWidth: main.width,
                iconWidth: main.width
            });
            children.push({
                tag: 'g',
                attributes: _objectSpread({}, trans.outer),
                children: [{
                    tag: 'g',
                    attributes: _objectSpread({}, trans.inner),
                    children: [{
                        tag: main.icon.tag,
                        children: main.icon.children,
                        attributes: _objectSpread({}, main.icon.attributes, trans.path)
                    }]
                }]
            });
        } else {
            children.push(main.icon);
        }

        return {
            children: children,
            attributes: attributes
        };
    }

    function asIcon(_ref) {
        var children = _ref.children,
            main = _ref.main,
            mask = _ref.mask,
            attributes = _ref.attributes,
            styles = _ref.styles,
            transform = _ref.transform;

        if (transformIsMeaningful(transform) && main.found && !mask.found) {
            var width = main.width,
                height = main.height;
            var offset = {
                x: width / height / 2,
                y: 0.5
            };
            attributes['style'] = joinStyles(_objectSpread({}, styles, {
                'transform-origin': "".concat(offset.x + transform.x / 16, "em ").concat(offset.y + transform.y / 16, "em")
            }));
        }

        return [{
            tag: 'svg',
            attributes: attributes,
            children: children
        }];
    }

    function asSymbol(_ref) {
        var prefix = _ref.prefix,
            iconName = _ref.iconName,
            children = _ref.children,
            attributes = _ref.attributes,
            symbol = _ref.symbol;
        var id = symbol === true ? "".concat(prefix, "-").concat(config.familyPrefix, "-").concat(iconName) : symbol;
        return [{
            tag: 'svg',
            attributes: {
                style: 'display: none;'
            },
            children: [{
                tag: 'symbol',
                attributes: _objectSpread({}, attributes, {
                    id: id
                }),
                children: children
            }]
        }];
    }

    function makeInlineSvgAbstract(params) {
        var _params$icons = params.icons,
            main = _params$icons.main,
            mask = _params$icons.mask,
            prefix = params.prefix,
            iconName = params.iconName,
            transform = params.transform,
            symbol = params.symbol,
            title = params.title,
            extra = params.extra,
            _params$watchable = params.watchable,
            watchable = _params$watchable === void 0 ? false : _params$watchable;

        var _ref = mask.found ? mask : main,
            width = _ref.width,
            height = _ref.height;

        var widthClass = "fa-w-".concat(Math.ceil(width / height * 16));
        var attrClass = [config.replacementClass, iconName ? "".concat(config.familyPrefix, "-").concat(iconName) : '', widthClass].filter(function(c) {
            return extra.classes.indexOf(c) === -1;
        }).concat(extra.classes).join(' ');
        var content = {
            children: [],
            attributes: _objectSpread({}, extra.attributes, {
                'data-prefix': prefix,
                'data-icon': iconName,
                'class': attrClass,
                'role': extra.attributes.role || 'img',
                'xmlns': 'http://www.w3.org/2000/svg',
                'viewBox': "0 0 ".concat(width, " ").concat(height)
            })
        };

        if (watchable) {
            content.attributes[DATA_FA_I2SVG] = '';
        }

        if (title) content.children.push({
            tag: 'title',
            attributes: {
                id: content.attributes['aria-labelledby'] || "title-".concat(nextUniqueId())
            },
            children: [title]
        });

        var args = _objectSpread({}, content, {
            prefix: prefix,
            iconName: iconName,
            main: main,
            mask: mask,
            transform: transform,
            symbol: symbol,
            styles: extra.styles
        });

        var _ref2 = mask.found && main.found ? makeIconMasking(args) : makeIconStandard(args),
            children = _ref2.children,
            attributes = _ref2.attributes;

        args.children = children;
        args.attributes = attributes;

        if (symbol) {
            return asSymbol(args);
        } else {
            return asIcon(args);
        }
    }

    function makeLayersTextAbstract(params) {
        var content = params.content,
            width = params.width,
            height = params.height,
            transform = params.transform,
            title = params.title,
            extra = params.extra,
            _params$watchable2 = params.watchable,
            watchable = _params$watchable2 === void 0 ? false : _params$watchable2;

        var attributes = _objectSpread({}, extra.attributes, title ? {
            'title': title
        } : {}, {
            'class': extra.classes.join(' ')
        });

        if (watchable) {
            attributes[DATA_FA_I2SVG] = '';
        }

        var styles = _objectSpread({}, extra.styles);

        if (transformIsMeaningful(transform)) {
            styles['transform'] = transformForCss({
                transform: transform,
                startCentered: true,
                width: width,
                height: height
            });
            styles['-webkit-transform'] = styles['transform'];
        }

        var styleString = joinStyles(styles);

        if (styleString.length > 0) {
            attributes['style'] = styleString;
        }

        var val = [];
        val.push({
            tag: 'span',
            attributes: attributes,
            children: [content]
        });

        if (title) {
            val.push({
                tag: 'span',
                attributes: {
                    class: 'sr-only'
                },
                children: [title]
            });
        }

        return val;
    }

    function makeLayersCounterAbstract(params) {
        var content = params.content,
            title = params.title,
            extra = params.extra;

        var attributes = _objectSpread({}, extra.attributes, title ? {
            'title': title
        } : {}, {
            'class': extra.classes.join(' ')
        });

        var styleString = joinStyles(extra.styles);

        if (styleString.length > 0) {
            attributes['style'] = styleString;
        }

        var val = [];
        val.push({
            tag: 'span',
            attributes: attributes,
            children: [content]
        });

        if (title) {
            val.push({
                tag: 'span',
                attributes: {
                    class: 'sr-only'
                },
                children: [title]
            });
        }

        return val;
    }

    var noop$1 = function noop() {};

    var p = config.measurePerformance && PERFORMANCE && PERFORMANCE.mark && PERFORMANCE.measure ? PERFORMANCE : {
        mark: noop$1,
        measure: noop$1
    };
    var preamble = "FA \"5.12.0\"";

    var begin = function begin(name) {
        p.mark("".concat(preamble, " ").concat(name, " begins"));
        return function() {
            return end(name);
        };
    };

    var end = function end(name) {
        p.mark("".concat(preamble, " ").concat(name, " ends"));
        p.measure("".concat(preamble, " ").concat(name), "".concat(preamble, " ").concat(name, " begins"), "".concat(preamble, " ").concat(name, " ends"));
    };

    var perf = {
        begin: begin,
        end: end
    };

    /**
     * Internal helper to bind a function known to have 4 arguments
     * to a given context.
     */

    var bindInternal4 = function bindInternal4(func, thisContext) {
        return function(a, b, c, d) {
            return func.call(thisContext, a, b, c, d);
        };
    };

    /**
     * # Reduce
     *
     * A fast object `.reduce()` implementation.
     *
     * @param  {Object}   subject      The object to reduce over.
     * @param  {Function} fn           The reducer function.
     * @param  {mixed}    initialValue The initial value for the reducer, defaults to subject[0].
     * @param  {Object}   thisContext  The context for the reducer.
     * @return {mixed}                 The final result.
     */


    var reduce = function fastReduceObject(subject, fn, initialValue, thisContext) {
        var keys = Object.keys(subject),
            length = keys.length,
            iterator = thisContext !== undefined ? bindInternal4(fn, thisContext) : fn,
            i,
            key,
            result;

        if (initialValue === undefined) {
            i = 1;
            result = subject[keys[0]];
        } else {
            i = 0;
            result = initialValue;
        }

        for (; i < length; i++) {
            key = keys[i];
            result = iterator(result, subject[key], key, subject);
        }

        return result;
    };

    function toHex(unicode) {
        var result = '';

        for (var i = 0; i < unicode.length; i++) {
            var hex = unicode.charCodeAt(i).toString(16);
            result += ('000' + hex).slice(-4);
        }

        return result;
    }

    function defineIcons(prefix, icons) {
        var params = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
        var _params$skipHooks = params.skipHooks,
            skipHooks = _params$skipHooks === void 0 ? false : _params$skipHooks;
        var normalized = Object.keys(icons).reduce(function(acc, iconName) {
            var icon = icons[iconName];
            var expanded = !!icon.icon;

            if (expanded) {
                acc[icon.iconName] = icon.icon;
            } else {
                acc[iconName] = icon;
            }

            return acc;
        }, {});

        if (typeof namespace.hooks.addPack === 'function' && !skipHooks) {
            namespace.hooks.addPack(prefix, normalized);
        } else {
            namespace.styles[prefix] = _objectSpread({}, namespace.styles[prefix] || {}, normalized);
        }
        /**
         * Font Awesome 4 used the prefix of `fa` for all icons. With the introduction
         * of new styles we needed to differentiate between them. Prefix `fa` is now an alias
         * for `fas` so we'll easy the upgrade process for our users by automatically defining
         * this as well.
         */


        if (prefix === 'fas') {
            defineIcons('fa', icons);
        }
    }

    var styles = namespace.styles,
        shims = namespace.shims;
    var _byUnicode = {};
    var _byLigature = {};
    var _byOldName = {};
    var build = function build() {
        var lookup = function lookup(reducer) {
            return reduce(styles, function(o, style, prefix) {
                o[prefix] = reduce(style, reducer, {});
                return o;
            }, {});
        };

        _byUnicode = lookup(function(acc, icon, iconName) {
            if (icon[3]) {
                acc[icon[3]] = iconName;
            }

            return acc;
        });
        _byLigature = lookup(function(acc, icon, iconName) {
            var ligatures = icon[2];
            acc[iconName] = iconName;
            ligatures.forEach(function(ligature) {
                acc[ligature] = iconName;
            });
            return acc;
        });
        var hasRegular = 'far' in styles;
        _byOldName = reduce(shims, function(acc, shim) {
            var oldName = shim[0];
            var prefix = shim[1];
            var iconName = shim[2];

            if (prefix === 'far' && !hasRegular) {
                prefix = 'fas';
            }

            acc[oldName] = {
                prefix: prefix,
                iconName: iconName
            };
            return acc;
        }, {});
    };
    build();

    function byUnicode(prefix, unicode) {
        return (_byUnicode[prefix] || {})[unicode];
    }

    function byLigature(prefix, ligature) {
        return (_byLigature[prefix] || {})[ligature];
    }

    function byOldName(name) {
        return _byOldName[name] || {
            prefix: null,
            iconName: null
        };
    }

    var styles$1 = namespace.styles;
    var emptyCanonicalIcon = function emptyCanonicalIcon() {
        return {
            prefix: null,
            iconName: null,
            rest: []
        };
    };

    function getCanonicalIcon(values) {
        return values.reduce(function(acc, cls) {
            var iconName = getIconName(config.familyPrefix, cls);

            if (styles$1[cls]) {
                acc.prefix = cls;
            } else if (config.autoFetchSvg && ['fas', 'far', 'fal', 'fad', 'fab', 'fa'].indexOf(cls) > -1) {
                acc.prefix = cls;
            } else if (iconName) {
                var shim = acc.prefix === 'fa' ? byOldName(iconName) : {};
                acc.iconName = shim.iconName || iconName;
                acc.prefix = shim.prefix || acc.prefix;
            } else if (cls !== config.replacementClass && cls.indexOf('fa-w-') !== 0) {
                acc.rest.push(cls);
            }

            return acc;
        }, emptyCanonicalIcon());
    }

    function iconFromMapping(mapping, prefix, iconName) {
        if (mapping && mapping[prefix] && mapping[prefix][iconName]) {
            return {
                prefix: prefix,
                iconName: iconName,
                icon: mapping[prefix][iconName]
            };
        }
    }

    function toHtml(abstractNodes) {
        var tag = abstractNodes.tag,
            _abstractNodes$attrib = abstractNodes.attributes,
            attributes = _abstractNodes$attrib === void 0 ? {} : _abstractNodes$attrib,
            _abstractNodes$childr = abstractNodes.children,
            children = _abstractNodes$childr === void 0 ? [] : _abstractNodes$childr;

        if (typeof abstractNodes === 'string') {
            return htmlEscape(abstractNodes);
        } else {
            return "<".concat(tag, " ").concat(joinAttributes(attributes), ">").concat(children.map(toHtml).join(''), "</").concat(tag, ">");
        }
    }

    var noop$2 = function noop() {};

    function isWatched(node) {
        var i2svg = node.getAttribute ? node.getAttribute(DATA_FA_I2SVG) : null;
        return typeof i2svg === 'string';
    }

    function getMutator() {
        if (config.autoReplaceSvg === true) {
            return mutators.replace;
        }

        var mutator = mutators[config.autoReplaceSvg];
        return mutator || mutators.replace;
    }

    var mutators = {
        replace: function replace(mutation) {
            var node = mutation[0];
            var abstract = mutation[1];
            var newOuterHTML = abstract.map(function(a) {
                return toHtml(a);
            }).join('\n');

            if (node.parentNode && node.outerHTML) {
                node.outerHTML = newOuterHTML + (config.keepOriginalSource && node.tagName.toLowerCase() !== 'svg' ? "<!-- ".concat(node.outerHTML, " -->") : '');
            } else if (node.parentNode) {
                var newNode = document.createElement('span');
                node.parentNode.replaceChild(newNode, node);
                newNode.outerHTML = newOuterHTML;
            }
        },
        nest: function nest(mutation) {
            var node = mutation[0];
            var abstract = mutation[1]; // If we already have a replaced node we do not want to continue nesting within it.
            // Short-circuit to the standard replacement

            if (~classArray(node).indexOf(config.replacementClass)) {
                return mutators.replace(mutation);
            }

            var forSvg = new RegExp("".concat(config.familyPrefix, "-.*"));
            delete abstract[0].attributes.style;
            delete abstract[0].attributes.id;
            var splitClasses = abstract[0].attributes.class.split(' ').reduce(function(acc, cls) {
                if (cls === config.replacementClass || cls.match(forSvg)) {
                    acc.toSvg.push(cls);
                } else {
                    acc.toNode.push(cls);
                }

                return acc;
            }, {
                toNode: [],
                toSvg: []
            });
            abstract[0].attributes.class = splitClasses.toSvg.join(' ');
            var newInnerHTML = abstract.map(function(a) {
                return toHtml(a);
            }).join('\n');
            node.setAttribute('class', splitClasses.toNode.join(' '));
            node.setAttribute(DATA_FA_I2SVG, '');
            node.innerHTML = newInnerHTML;
        }
    };

    function performOperationSync(op) {
        op();
    }

    function perform(mutations, callback) {
        var callbackFunction = typeof callback === 'function' ? callback : noop$2;

        if (mutations.length === 0) {
            callbackFunction();
        } else {
            var frame = performOperationSync;

            if (config.mutateApproach === MUTATION_APPROACH_ASYNC) {
                frame = WINDOW.requestAnimationFrame || performOperationSync;
            }

            frame(function() {
                var mutator = getMutator();
                var mark = perf.begin('mutate');
                mutations.map(mutator);
                mark();
                callbackFunction();
            });
        }
    }
    var disabled = false;

    function disableObservation() {
        disabled = true;
    }

    function enableObservation() {
        disabled = false;
    }
    var mo = null;

    function observe(options) {
        if (!MUTATION_OBSERVER) {
            return;
        }

        if (!config.observeMutations) {
            return;
        }

        var treeCallback = options.treeCallback,
            nodeCallback = options.nodeCallback,
            pseudoElementsCallback = options.pseudoElementsCallback,
            _options$observeMutat = options.observeMutationsRoot,
            observeMutationsRoot = _options$observeMutat === void 0 ? DOCUMENT : _options$observeMutat;
        mo = new MUTATION_OBSERVER(function(objects) {
            if (disabled) return;
            toArray(objects).forEach(function(mutationRecord) {
                if (mutationRecord.type === 'childList' && mutationRecord.addedNodes.length > 0 && !isWatched(mutationRecord.addedNodes[0])) {
                    if (config.searchPseudoElements) {
                        pseudoElementsCallback(mutationRecord.target);
                    }

                    treeCallback(mutationRecord.target);
                }

                if (mutationRecord.type === 'attributes' && mutationRecord.target.parentNode && config.searchPseudoElements) {
                    pseudoElementsCallback(mutationRecord.target.parentNode);
                }

                if (mutationRecord.type === 'attributes' && isWatched(mutationRecord.target) && ~ATTRIBUTES_WATCHED_FOR_MUTATION.indexOf(mutationRecord.attributeName)) {
                    if (mutationRecord.attributeName === 'class') {
                        var _getCanonicalIcon = getCanonicalIcon(classArray(mutationRecord.target)),
                            prefix = _getCanonicalIcon.prefix,
                            iconName = _getCanonicalIcon.iconName;

                        if (prefix) mutationRecord.target.setAttribute('data-prefix', prefix);
                        if (iconName) mutationRecord.target.setAttribute('data-icon', iconName);
                    } else {
                        nodeCallback(mutationRecord.target);
                    }
                }
            });
        });
        if (!IS_DOM) return;
        mo.observe(observeMutationsRoot, {
            childList: true,
            attributes: true,
            characterData: true,
            subtree: true
        });
    }

    function disconnect() {
        if (!mo) return;
        mo.disconnect();
    }

    function styleParser(node) {
        var style = node.getAttribute('style');
        var val = [];

        if (style) {
            val = style.split(';').reduce(function(acc, style) {
                var styles = style.split(':');
                var prop = styles[0];
                var value = styles.slice(1);

                if (prop && value.length > 0) {
                    acc[prop] = value.join(':').trim();
                }

                return acc;
            }, {});
        }

        return val;
    }

    function classParser(node) {
        var existingPrefix = node.getAttribute('data-prefix');
        var existingIconName = node.getAttribute('data-icon');
        var innerText = node.innerText !== undefined ? node.innerText.trim() : '';
        var val = getCanonicalIcon(classArray(node));

        if (existingPrefix && existingIconName) {
            val.prefix = existingPrefix;
            val.iconName = existingIconName;
        }

        if (val.prefix && innerText.length > 1) {
            val.iconName = byLigature(val.prefix, node.innerText);
        } else if (val.prefix && innerText.length === 1) {
            val.iconName = byUnicode(val.prefix, toHex(node.innerText));
        }

        return val;
    }

    var parseTransformString = function parseTransformString(transformString) {
        var transform = {
            size: 16,
            x: 0,
            y: 0,
            flipX: false,
            flipY: false,
            rotate: 0
        };

        if (!transformString) {
            return transform;
        } else {
            return transformString.toLowerCase().split(' ').reduce(function(acc, n) {
                var parts = n.toLowerCase().split('-');
                var first = parts[0];
                var rest = parts.slice(1).join('-');

                if (first && rest === 'h') {
                    acc.flipX = true;
                    return acc;
                }

                if (first && rest === 'v') {
                    acc.flipY = true;
                    return acc;
                }

                rest = parseFloat(rest);

                if (isNaN(rest)) {
                    return acc;
                }

                switch (first) {
                    case 'grow':
                        acc.size = acc.size + rest;
                        break;

                    case 'shrink':
                        acc.size = acc.size - rest;
                        break;

                    case 'left':
                        acc.x = acc.x - rest;
                        break;

                    case 'right':
                        acc.x = acc.x + rest;
                        break;

                    case 'up':
                        acc.y = acc.y - rest;
                        break;

                    case 'down':
                        acc.y = acc.y + rest;
                        break;

                    case 'rotate':
                        acc.rotate = acc.rotate + rest;
                        break;
                }

                return acc;
            }, transform);
        }
    };

    function transformParser(node) {
        return parseTransformString(node.getAttribute('data-fa-transform'));
    }

    function symbolParser(node) {
        var symbol = node.getAttribute('data-fa-symbol');
        return symbol === null ? false : symbol === '' ? true : symbol;
    }

    function attributesParser(node) {
        var extraAttributes = toArray(node.attributes).reduce(function(acc, attr) {
            if (acc.name !== 'class' && acc.name !== 'style') {
                acc[attr.name] = attr.value;
            }

            return acc;
        }, {});
        var title = node.getAttribute('title');

        if (config.autoA11y) {
            if (title) {
                extraAttributes['aria-labelledby'] = "".concat(config.replacementClass, "-title-").concat(nextUniqueId());
            } else {
                extraAttributes['aria-hidden'] = 'true';
                extraAttributes['focusable'] = 'false';
            }
        }

        return extraAttributes;
    }

    function maskParser(node) {
        var mask = node.getAttribute('data-fa-mask');

        if (!mask) {
            return emptyCanonicalIcon();
        } else {
            return getCanonicalIcon(mask.split(' ').map(function(i) {
                return i.trim();
            }));
        }
    }

    function blankMeta() {
        return {
            iconName: null,
            title: null,
            prefix: null,
            transform: meaninglessTransform,
            symbol: false,
            mask: null,
            extra: {
                classes: [],
                styles: {},
                attributes: {}
            }
        };
    }

    function parseMeta(node) {
        var _classParser = classParser(node),
            iconName = _classParser.iconName,
            prefix = _classParser.prefix,
            extraClasses = _classParser.rest;

        var extraStyles = styleParser(node);
        var transform = transformParser(node);
        var symbol = symbolParser(node);
        var extraAttributes = attributesParser(node);
        var mask = maskParser(node);
        return {
            iconName: iconName,
            title: node.getAttribute('title'),
            prefix: prefix,
            transform: transform,
            symbol: symbol,
            mask: mask,
            extra: {
                classes: extraClasses,
                styles: extraStyles,
                attributes: extraAttributes
            }
        };
    }

    function MissingIcon(error) {
        this.name = 'MissingIcon';
        this.message = error || 'Icon unavailable';
        this.stack = new Error().stack;
    }
    MissingIcon.prototype = Object.create(Error.prototype);
    MissingIcon.prototype.constructor = MissingIcon;

    var FILL = {
        fill: 'currentColor'
    };
    var ANIMATION_BASE = {
        attributeType: 'XML',
        repeatCount: 'indefinite',
        dur: '2s'
    };
    var RING = {
        tag: 'path',
        attributes: _objectSpread({}, FILL, {
            d: 'M156.5,447.7l-12.6,29.5c-18.7-9.5-35.9-21.2-51.5-34.9l22.7-22.7C127.6,430.5,141.5,440,156.5,447.7z M40.6,272H8.5 c1.4,21.2,5.4,41.7,11.7,61.1L50,321.2C45.1,305.5,41.8,289,40.6,272z M40.6,240c1.4-18.8,5.2-37,11.1-54.1l-29.5-12.6 C14.7,194.3,10,216.7,8.5,240H40.6z M64.3,156.5c7.8-14.9,17.2-28.8,28.1-41.5L69.7,92.3c-13.7,15.6-25.5,32.8-34.9,51.5 L64.3,156.5z M397,419.6c-13.9,12-29.4,22.3-46.1,30.4l11.9,29.8c20.7-9.9,39.8-22.6,56.9-37.6L397,419.6z M115,92.4 c13.9-12,29.4-22.3,46.1-30.4l-11.9-29.8c-20.7,9.9-39.8,22.6-56.8,37.6L115,92.4z M447.7,355.5c-7.8,14.9-17.2,28.8-28.1,41.5 l22.7,22.7c13.7-15.6,25.5-32.9,34.9-51.5L447.7,355.5z M471.4,272c-1.4,18.8-5.2,37-11.1,54.1l29.5,12.6 c7.5-21.1,12.2-43.5,13.6-66.8H471.4z M321.2,462c-15.7,5-32.2,8.2-49.2,9.4v32.1c21.2-1.4,41.7-5.4,61.1-11.7L321.2,462z M240,471.4c-18.8-1.4-37-5.2-54.1-11.1l-12.6,29.5c21.1,7.5,43.5,12.2,66.8,13.6V471.4z M462,190.8c5,15.7,8.2,32.2,9.4,49.2h32.1 c-1.4-21.2-5.4-41.7-11.7-61.1L462,190.8z M92.4,397c-12-13.9-22.3-29.4-30.4-46.1l-29.8,11.9c9.9,20.7,22.6,39.8,37.6,56.9 L92.4,397z M272,40.6c18.8,1.4,36.9,5.2,54.1,11.1l12.6-29.5C317.7,14.7,295.3,10,272,8.5V40.6z M190.8,50 c15.7-5,32.2-8.2,49.2-9.4V8.5c-21.2,1.4-41.7,5.4-61.1,11.7L190.8,50z M442.3,92.3L419.6,115c12,13.9,22.3,29.4,30.5,46.1 l29.8-11.9C470,128.5,457.3,109.4,442.3,92.3z M397,92.4l22.7-22.7c-15.6-13.7-32.8-25.5-51.5-34.9l-12.6,29.5 C370.4,72.1,384.4,81.5,397,92.4z'
        })
    };

    var OPACITY_ANIMATE = _objectSpread({}, ANIMATION_BASE, {
        attributeName: 'opacity'
    });

    var DOT = {
        tag: 'circle',
        attributes: _objectSpread({}, FILL, {
            cx: '256',
            cy: '364',
            r: '28'
        }),
        children: [{
            tag: 'animate',
            attributes: _objectSpread({}, ANIMATION_BASE, {
                attributeName: 'r',
                values: '28;14;28;28;14;28;'
            })
        }, {
            tag: 'animate',
            attributes: _objectSpread({}, OPACITY_ANIMATE, {
                values: '1;0;1;1;0;1;'
            })
        }]
    };
    var QUESTION = {
        tag: 'path',
        attributes: _objectSpread({}, FILL, {
            opacity: '1',
            d: 'M263.7,312h-16c-6.6,0-12-5.4-12-12c0-71,77.4-63.9,77.4-107.8c0-20-17.8-40.2-57.4-40.2c-29.1,0-44.3,9.6-59.2,28.7 c-3.9,5-11.1,6-16.2,2.4l-13.1-9.2c-5.6-3.9-6.9-11.8-2.6-17.2c21.2-27.2,46.4-44.7,91.2-44.7c52.3,0,97.4,29.8,97.4,80.2 c0,67.6-77.4,63.5-77.4,107.8C275.7,306.6,270.3,312,263.7,312z'
        }),
        children: [{
            tag: 'animate',
            attributes: _objectSpread({}, OPACITY_ANIMATE, {
                values: '1;0;0;0;0;1;'
            })
        }]
    };
    var EXCLAMATION = {
        tag: 'path',
        attributes: _objectSpread({}, FILL, {
            opacity: '0',
            d: 'M232.5,134.5l7,168c0.3,6.4,5.6,11.5,12,11.5h9c6.4,0,11.7-5.1,12-11.5l7-168c0.3-6.8-5.2-12.5-12-12.5h-23 C237.7,122,232.2,127.7,232.5,134.5z'
        }),
        children: [{
            tag: 'animate',
            attributes: _objectSpread({}, OPACITY_ANIMATE, {
                values: '0;0;1;1;0;0;'
            })
        }]
    };
    var missing = {
        tag: 'g',
        children: [RING, DOT, QUESTION, EXCLAMATION]
    };

    var styles$2 = namespace.styles;

    function asFoundIcon(icon) {
        var width = icon[0];
        var height = icon[1];

        var _icon$slice = icon.slice(4),
            _icon$slice2 = _slicedToArray(_icon$slice, 1),
            vectorData = _icon$slice2[0];

        var element = null;

        if (Array.isArray(vectorData)) {
            element = {
                tag: 'g',
                attributes: {
                    class: "".concat(config.familyPrefix, "-").concat(DUOTONE_CLASSES.GROUP)
                },
                children: [{
                    tag: 'path',
                    attributes: {
                        class: "".concat(config.familyPrefix, "-").concat(DUOTONE_CLASSES.SECONDARY),
                        fill: 'currentColor',
                        d: vectorData[0]
                    }
                }, {
                    tag: 'path',
                    attributes: {
                        class: "".concat(config.familyPrefix, "-").concat(DUOTONE_CLASSES.PRIMARY),
                        fill: 'currentColor',
                        d: vectorData[1]
                    }
                }]
            };
        } else {
            element = {
                tag: 'path',
                attributes: {
                    fill: 'currentColor',
                    d: vectorData
                }
            };
        }

        return {
            found: true,
            width: width,
            height: height,
            icon: element
        };
    }

    function findIcon(iconName, prefix) {
        return new picked(function(resolve, reject) {
            var val = {
                found: false,
                width: 512,
                height: 512,
                icon: missing
            };

            if (iconName && prefix && styles$2[prefix] && styles$2[prefix][iconName]) {
                var icon = styles$2[prefix][iconName];
                return resolve(asFoundIcon(icon));
            }

            var headers = {};

            if (_typeof(WINDOW.FontAwesomeKitConfig) === 'object' && typeof window.FontAwesomeKitConfig.token === 'string') {
                headers['fa-kit-token'] = WINDOW.FontAwesomeKitConfig.token;
            }

            if (iconName && prefix && !config.showMissingIcons) {
                reject(new MissingIcon("Icon is missing for prefix ".concat(prefix, " with icon name ").concat(iconName)));
            } else {
                resolve(val);
            }
        });
    }

    var styles$3 = namespace.styles;

    function generateSvgReplacementMutation(node, nodeMeta) {
        var iconName = nodeMeta.iconName,
            title = nodeMeta.title,
            prefix = nodeMeta.prefix,
            transform = nodeMeta.transform,
            symbol = nodeMeta.symbol,
            mask = nodeMeta.mask,
            extra = nodeMeta.extra;
        return new picked(function(resolve, reject) {
            picked.all([findIcon(iconName, prefix), findIcon(mask.iconName, mask.prefix)]).then(function(_ref) {
                var _ref2 = _slicedToArray(_ref, 2),
                    main = _ref2[0],
                    mask = _ref2[1];

                resolve([node, makeInlineSvgAbstract({
                    icons: {
                        main: main,
                        mask: mask
                    },
                    prefix: prefix,
                    iconName: iconName,
                    transform: transform,
                    symbol: symbol,
                    mask: mask,
                    title: title,
                    extra: extra,
                    watchable: true
                })]);
            });
        });
    }

    function generateLayersText(node, nodeMeta) {
        var title = nodeMeta.title,
            transform = nodeMeta.transform,
            extra = nodeMeta.extra;
        var width = null;
        var height = null;

        if (IS_IE) {
            var computedFontSize = parseInt(getComputedStyle(node).fontSize, 10);
            var boundingClientRect = node.getBoundingClientRect();
            width = boundingClientRect.width / computedFontSize;
            height = boundingClientRect.height / computedFontSize;
        }

        if (config.autoA11y && !title) {
            extra.attributes['aria-hidden'] = 'true';
        }

        return picked.resolve([node, makeLayersTextAbstract({
            content: node.innerHTML,
            width: width,
            height: height,
            transform: transform,
            title: title,
            extra: extra,
            watchable: true
        })]);
    }

    function generateMutation(node) {
        var nodeMeta = parseMeta(node);

        if (~nodeMeta.extra.classes.indexOf(LAYERS_TEXT_CLASSNAME)) {
            return generateLayersText(node, nodeMeta);
        } else {
            return generateSvgReplacementMutation(node, nodeMeta);
        }
    }

    function onTree(root) {
        var callback = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;
        if (!IS_DOM) return;
        var htmlClassList = DOCUMENT.documentElement.classList;

        var hclAdd = function hclAdd(suffix) {
            return htmlClassList.add("".concat(HTML_CLASS_I2SVG_BASE_CLASS, "-").concat(suffix));
        };

        var hclRemove = function hclRemove(suffix) {
            return htmlClassList.remove("".concat(HTML_CLASS_I2SVG_BASE_CLASS, "-").concat(suffix));
        };

        var prefixes = config.autoFetchSvg ? Object.keys(PREFIX_TO_STYLE) : Object.keys(styles$3);
        var prefixesDomQuery = [".".concat(LAYERS_TEXT_CLASSNAME, ":not([").concat(DATA_FA_I2SVG, "])")].concat(prefixes.map(function(p) {
            return ".".concat(p, ":not([").concat(DATA_FA_I2SVG, "])");
        })).join(', ');

        if (prefixesDomQuery.length === 0) {
            return;
        }

        var candidates = [];

        try {
            candidates = toArray(root.querySelectorAll(prefixesDomQuery));
        } catch (e) { // noop
        }

        if (candidates.length > 0) {
            hclAdd('pending');
            hclRemove('complete');
        } else {
            return;
        }

        var mark = perf.begin('onTree');
        var mutations = candidates.reduce(function(acc, node) {
            try {
                var mutation = generateMutation(node);

                if (mutation) {
                    acc.push(mutation);
                }
            } catch (e) {
                if (!PRODUCTION) {
                    if (e instanceof MissingIcon) {
                        console.error(e);
                    }
                }
            }

            return acc;
        }, []);
        return new picked(function(resolve, reject) {
            picked.all(mutations).then(function(resolvedMutations) {
                perform(resolvedMutations, function() {
                    hclAdd('active');
                    hclAdd('complete');
                    hclRemove('pending');
                    if (typeof callback === 'function') callback();
                    mark();
                    resolve();
                });
            }).catch(function() {
                mark();
                reject();
            });
        });
    }

    function onNode(node) {
        var callback = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;
        generateMutation(node).then(function(mutation) {
            if (mutation) {
                perform([mutation], callback);
            }
        });
    }

    function replaceForPosition(node, position) {
        var pendingAttribute = "".concat(DATA_FA_PSEUDO_ELEMENT_PENDING).concat(position.replace(':', '-'));
        return new picked(function(resolve, reject) {
            if (node.getAttribute(pendingAttribute) !== null) {
                // This node is already being processed
                return resolve();
            }

            var children = toArray(node.children);
            var alreadyProcessedPseudoElement = children.filter(function(c) {
                return c.getAttribute(DATA_FA_PSEUDO_ELEMENT) === position;
            })[0];
            var styles = WINDOW.getComputedStyle(node, position);
            var fontFamily = styles.getPropertyValue('font-family').match(FONT_FAMILY_PATTERN);
            var fontWeight = styles.getPropertyValue('font-weight');

            if (alreadyProcessedPseudoElement && !fontFamily) {
                // If we've already processed it but the current computed style does not result in a font-family,
                // that probably means that a class name that was previously present to make the icon has been
                // removed. So we now should delete the icon.
                node.removeChild(alreadyProcessedPseudoElement);
                return resolve();
            } else if (fontFamily) {
                var content = styles.getPropertyValue('content');
                var prefix = ~['Solid', 'Regular', 'Light', 'Duotone', 'Brands'].indexOf(fontFamily[1]) ? STYLE_TO_PREFIX[fontFamily[1].toLowerCase()] : FONT_WEIGHT_TO_PREFIX[fontWeight];
                var hexValue = toHex(content.length === 3 ? content.substr(1, 1) : content);
                var iconName = byUnicode(prefix, hexValue);
                var iconIdentifier = iconName; // Only convert the pseudo element in this :before/:after position into an icon if we haven't
                // already done so with the same prefix and iconName

                if (iconName && (!alreadyProcessedPseudoElement || alreadyProcessedPseudoElement.getAttribute(DATA_PREFIX) !== prefix || alreadyProcessedPseudoElement.getAttribute(DATA_ICON) !== iconIdentifier)) {
                    node.setAttribute(pendingAttribute, iconIdentifier);

                    if (alreadyProcessedPseudoElement) {
                        // Delete the old one, since we're replacing it with a new one
                        node.removeChild(alreadyProcessedPseudoElement);
                    }

                    var meta = blankMeta();
                    var extra = meta.extra;
                    extra.attributes[DATA_FA_PSEUDO_ELEMENT] = position;
                    findIcon(iconName, prefix).then(function(main) {
                        var abstract = makeInlineSvgAbstract(_objectSpread({}, meta, {
                            icons: {
                                main: main,
                                mask: emptyCanonicalIcon()
                            },
                            prefix: prefix,
                            iconName: iconIdentifier,
                            extra: extra,
                            watchable: true
                        }));
                        var element = DOCUMENT.createElement('svg');

                        if (position === ':before') {
                            node.insertBefore(element, node.firstChild);
                        } else {
                            node.appendChild(element);
                        }

                        element.outerHTML = abstract.map(function(a) {
                            return toHtml(a);
                        }).join('\n');
                        node.removeAttribute(pendingAttribute);
                        resolve();
                    }).catch(reject);
                } else {
                    resolve();
                }
            } else {
                resolve();
            }
        });
    }

    function replace(node) {
        return picked.all([replaceForPosition(node, ':before'), replaceForPosition(node, ':after')]);
    }

    function processable(node) {
        return node.parentNode !== document.head && !~TAGNAMES_TO_SKIP_FOR_PSEUDOELEMENTS.indexOf(node.tagName.toUpperCase()) && !node.getAttribute(DATA_FA_PSEUDO_ELEMENT) && (!node.parentNode || node.parentNode.tagName !== 'svg');
    }

    function searchPseudoElements(root) {
        if (!IS_DOM) return;
        return new picked(function(resolve, reject) {
            var operations = toArray(root.querySelectorAll('*')).filter(processable).map(replace);
            var end = perf.begin('searchPseudoElements');
            disableObservation();
            picked.all(operations).then(function() {
                end();
                enableObservation();
                resolve();
            }).catch(function() {
                end();
                enableObservation();
                reject();
            });
        });
    }

    var baseStyles = "svg:not(:root).svg-inline--fa{overflow:visible}.svg-inline--fa{display:inline-block;font-size:inherit;height:1em;overflow:visible;vertical-align:-.125em}.svg-inline--fa.fa-lg{vertical-align:-.225em}.svg-inline--fa.fa-w-1{width:.0625em}.svg-inline--fa.fa-w-2{width:.125em}.svg-inline--fa.fa-w-3{width:.1875em}.svg-inline--fa.fa-w-4{width:.25em}.svg-inline--fa.fa-w-5{width:.3125em}.svg-inline--fa.fa-w-6{width:.375em}.svg-inline--fa.fa-w-7{width:.4375em}.svg-inline--fa.fa-w-8{width:.5em}.svg-inline--fa.fa-w-9{width:.5625em}.svg-inline--fa.fa-w-10{width:.625em}.svg-inline--fa.fa-w-11{width:.6875em}.svg-inline--fa.fa-w-12{width:.75em}.svg-inline--fa.fa-w-13{width:.8125em}.svg-inline--fa.fa-w-14{width:.875em}.svg-inline--fa.fa-w-15{width:.9375em}.svg-inline--fa.fa-w-16{width:1em}.svg-inline--fa.fa-w-17{width:1.0625em}.svg-inline--fa.fa-w-18{width:1.125em}.svg-inline--fa.fa-w-19{width:1.1875em}.svg-inline--fa.fa-w-20{width:1.25em}.svg-inline--fa.fa-pull-left{margin-right:.3em;width:auto}.svg-inline--fa.fa-pull-right{margin-left:.3em;width:auto}.svg-inline--fa.fa-border{height:1.5em}.svg-inline--fa.fa-li{width:2em}.svg-inline--fa.fa-fw{width:1.25em}.fa-layers svg.svg-inline--fa{bottom:0;left:0;margin:auto;position:absolute;right:0;top:0}.fa-layers{display:inline-block;height:1em;position:relative;text-align:center;vertical-align:-.125em;width:1em}.fa-layers svg.svg-inline--fa{-webkit-transform-origin:center center;transform-origin:center center}.fa-layers-counter,.fa-layers-text{display:inline-block;position:absolute;text-align:center}.fa-layers-text{left:50%;top:50%;-webkit-transform:translate(-50%,-50%);transform:translate(-50%,-50%);-webkit-transform-origin:center center;transform-origin:center center}.fa-layers-counter{background-color:#ff253a;border-radius:1em;-webkit-box-sizing:border-box;box-sizing:border-box;color:#fff;height:1.5em;line-height:1;max-width:5em;min-width:1.5em;overflow:hidden;padding:.25em;right:0;text-overflow:ellipsis;top:0;-webkit-transform:scale(.25);transform:scale(.25);-webkit-transform-origin:top right;transform-origin:top right}.fa-layers-bottom-right{bottom:0;right:0;top:auto;-webkit-transform:scale(.25);transform:scale(.25);-webkit-transform-origin:bottom right;transform-origin:bottom right}.fa-layers-bottom-left{bottom:0;left:0;right:auto;top:auto;-webkit-transform:scale(.25);transform:scale(.25);-webkit-transform-origin:bottom left;transform-origin:bottom left}.fa-layers-top-right{right:0;top:0;-webkit-transform:scale(.25);transform:scale(.25);-webkit-transform-origin:top right;transform-origin:top right}.fa-layers-top-left{left:0;right:auto;top:0;-webkit-transform:scale(.25);transform:scale(.25);-webkit-transform-origin:top left;transform-origin:top left}.fa-lg{font-size:1.3333333333em;line-height:.75em;vertical-align:-.0667em}.fa-xs{font-size:.75em}.fa-sm{font-size:.875em}.fa-1x{font-size:1em}.fa-2x{font-size:2em}.fa-3x{font-size:3em}.fa-4x{font-size:4em}.fa-5x{font-size:5em}.fa-6x{font-size:6em}.fa-7x{font-size:7em}.fa-8x{font-size:8em}.fa-9x{font-size:9em}.fa-10x{font-size:10em}.fa-fw{text-align:center;width:1.25em}.fa-ul{list-style-type:none;margin-left:2.5em;padding-left:0}.fa-ul>li{position:relative}.fa-li{left:-2em;position:absolute;text-align:center;width:2em;line-height:inherit}.fa-border{border:solid .08em #eee;border-radius:.1em;padding:.2em .25em .15em}.fa-pull-left{float:left}.fa-pull-right{float:right}.fa.fa-pull-left,.fab.fa-pull-left,.fal.fa-pull-left,.far.fa-pull-left,.fas.fa-pull-left{margin-right:.3em}.fa.fa-pull-right,.fab.fa-pull-right,.fal.fa-pull-right,.far.fa-pull-right,.fas.fa-pull-right{margin-left:.3em}.fa-spin{-webkit-animation:fa-spin 2s infinite linear;animation:fa-spin 2s infinite linear}.fa-pulse{-webkit-animation:fa-spin 1s infinite steps(8);animation:fa-spin 1s infinite steps(8)}@-webkit-keyframes fa-spin{0%{-webkit-transform:rotate(0);transform:rotate(0)}100%{-webkit-transform:rotate(360deg);transform:rotate(360deg)}}@keyframes fa-spin{0%{-webkit-transform:rotate(0);transform:rotate(0)}100%{-webkit-transform:rotate(360deg);transform:rotate(360deg)}}.fa-rotate-90{-webkit-transform:rotate(90deg);transform:rotate(90deg)}.fa-rotate-180{-webkit-transform:rotate(180deg);transform:rotate(180deg)}.fa-rotate-270{-webkit-transform:rotate(270deg);transform:rotate(270deg)}.fa-flip-horizontal{-webkit-transform:scale(-1,1);transform:scale(-1,1)}.fa-flip-vertical{-webkit-transform:scale(1,-1);transform:scale(1,-1)}.fa-flip-both,.fa-flip-horizontal.fa-flip-vertical{-webkit-transform:scale(-1,-1);transform:scale(-1,-1)}:root .fa-flip-both,:root .fa-flip-horizontal,:root .fa-flip-vertical,:root .fa-rotate-180,:root .fa-rotate-270,:root .fa-rotate-90{-webkit-filter:none;filter:none}.fa-stack{display:inline-block;height:2em;position:relative;width:2.5em}.fa-stack-1x,.fa-stack-2x{bottom:0;left:0;margin:auto;position:absolute;right:0;top:0}.svg-inline--fa.fa-stack-1x{height:1em;width:1.25em}.svg-inline--fa.fa-stack-2x{height:2em;width:2.5em}.fa-inverse{color:#fff}.sr-only{border:0;clip:rect(0,0,0,0);height:1px;margin:-1px;overflow:hidden;padding:0;position:absolute;width:1px}.sr-only-focusable:active,.sr-only-focusable:focus{clip:auto;height:auto;margin:0;overflow:visible;position:static;width:auto}.svg-inline--fa .fa-primary{fill:var(--fa-primary-color,currentColor);opacity:1;opacity:var(--fa-primary-opacity,1)}.svg-inline--fa .fa-secondary{fill:var(--fa-secondary-color,currentColor);opacity:.4;opacity:var(--fa-secondary-opacity,.4)}.svg-inline--fa.fa-swap-opacity .fa-primary{opacity:.4;opacity:var(--fa-secondary-opacity,.4)}.svg-inline--fa.fa-swap-opacity .fa-secondary{opacity:1;opacity:var(--fa-primary-opacity,1)}.svg-inline--fa mask .fa-primary,.svg-inline--fa mask .fa-secondary{fill:#000}.fad.fa-inverse{color:#fff}";

    function css() {
        var dfp = DEFAULT_FAMILY_PREFIX;
        var drc = DEFAULT_REPLACEMENT_CLASS;
        var fp = config.familyPrefix;
        var rc = config.replacementClass;
        var s = baseStyles;

        if (fp !== dfp || rc !== drc) {
            var dPatt = new RegExp("\\.".concat(dfp, "\\-"), 'g');
            var customPropPatt = new RegExp("\\--".concat(dfp, "\\-"), 'g');
            var rPatt = new RegExp("\\.".concat(drc), 'g');
            s = s.replace(dPatt, ".".concat(fp, "-")).replace(customPropPatt, "--".concat(fp, "-")).replace(rPatt, ".".concat(rc));
        }

        return s;
    }

    var Library =
        /*#__PURE__*/
        function() {
            function Library() {
                _classCallCheck(this, Library);

                this.definitions = {};
            }

            _createClass(Library, [{
                key: "add",
                value: function add() {
                    var _this = this;

                    for (var _len = arguments.length, definitions = new Array(_len), _key = 0; _key < _len; _key++) {
                        definitions[_key] = arguments[_key];
                    }

                    var additions = definitions.reduce(this._pullDefinitions, {});
                    Object.keys(additions).forEach(function(key) {
                        _this.definitions[key] = _objectSpread({}, _this.definitions[key] || {}, additions[key]);
                        defineIcons(key, additions[key]);
                        build();
                    });
                }
            }, {
                key: "reset",
                value: function reset() {
                    this.definitions = {};
                }
            }, {
                key: "_pullDefinitions",
                value: function _pullDefinitions(additions, definition) {
                    var normalized = definition.prefix && definition.iconName && definition.icon ? {
                        0: definition
                    } : definition;
                    Object.keys(normalized).map(function(key) {
                        var _normalized$key = normalized[key],
                            prefix = _normalized$key.prefix,
                            iconName = _normalized$key.iconName,
                            icon = _normalized$key.icon;
                        if (!additions[prefix]) additions[prefix] = {};
                        additions[prefix][iconName] = icon;
                    });
                    return additions;
                }
            }]);

            return Library;
        }();

    function ensureCss() {
        if (config.autoAddCss && !_cssInserted) {
            insertCss(css());

            _cssInserted = true;
        }
    }

    function apiObject(val, abstractCreator) {
        Object.defineProperty(val, 'abstract', {
            get: abstractCreator
        });
        Object.defineProperty(val, 'html', {
            get: function get() {
                return val.abstract.map(function(a) {
                    return toHtml(a);
                });
            }
        });
        Object.defineProperty(val, 'node', {
            get: function get() {
                if (!IS_DOM) return;
                var container = DOCUMENT.createElement('div');
                container.innerHTML = val.html;
                return container.children;
            }
        });
        return val;
    }

    function findIconDefinition(iconLookup) {
        var _iconLookup$prefix = iconLookup.prefix,
            prefix = _iconLookup$prefix === void 0 ? 'fa' : _iconLookup$prefix,
            iconName = iconLookup.iconName;
        if (!iconName) return;
        return iconFromMapping(library.definitions, prefix, iconName) || iconFromMapping(namespace.styles, prefix, iconName);
    }

    function resolveIcons(next) {
        return function(maybeIconDefinition) {
            var params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
            var iconDefinition = (maybeIconDefinition || {}).icon ? maybeIconDefinition : findIconDefinition(maybeIconDefinition || {});
            var mask = params.mask;

            if (mask) {
                mask = (mask || {}).icon ? mask : findIconDefinition(mask || {});
            }

            return next(iconDefinition, _objectSpread({}, params, {
                mask: mask
            }));
        };
    }

    var library = new Library();
    var noAuto = function noAuto() {
        config.autoReplaceSvg = false;
        config.observeMutations = false;
        disconnect();
    };
    var _cssInserted = false;
    var dom = {
        i2svg: function i2svg() {
            var params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

            if (IS_DOM) {
                ensureCss();
                var _params$node = params.node,
                    node = _params$node === void 0 ? DOCUMENT : _params$node,
                    _params$callback = params.callback,
                    callback = _params$callback === void 0 ? function() {} : _params$callback;

                if (config.searchPseudoElements) {
                    searchPseudoElements(node);
                }

                return onTree(node, callback);
            } else {
                return picked.reject('Operation requires a DOM of some kind.');
            }
        },
        css: css,
        insertCss: function insertCss$$1() {
            if (!_cssInserted) {
                insertCss(css());

                _cssInserted = true;
            }
        },
        watch: function watch() {
            var params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
            var autoReplaceSvgRoot = params.autoReplaceSvgRoot,
                observeMutationsRoot = params.observeMutationsRoot;

            if (config.autoReplaceSvg === false) {
                config.autoReplaceSvg = true;
            }

            config.observeMutations = true;
            domready(function() {
                autoReplace({
                    autoReplaceSvgRoot: autoReplaceSvgRoot
                });
                observe({
                    treeCallback: onTree,
                    nodeCallback: onNode,
                    pseudoElementsCallback: searchPseudoElements,
                    observeMutationsRoot: observeMutationsRoot
                });
            });
        }
    };
    var parse = {
        transform: function transform(transformString) {
            return parseTransformString(transformString);
        }
    };
    var icon = resolveIcons(function(iconDefinition) {
        var params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
        var _params$transform = params.transform,
            transform = _params$transform === void 0 ? meaninglessTransform : _params$transform,
            _params$symbol = params.symbol,
            symbol = _params$symbol === void 0 ? false : _params$symbol,
            _params$mask = params.mask,
            mask = _params$mask === void 0 ? null : _params$mask,
            _params$title = params.title,
            title = _params$title === void 0 ? null : _params$title,
            _params$classes = params.classes,
            classes = _params$classes === void 0 ? [] : _params$classes,
            _params$attributes = params.attributes,
            attributes = _params$attributes === void 0 ? {} : _params$attributes,
            _params$styles = params.styles,
            styles = _params$styles === void 0 ? {} : _params$styles;
        if (!iconDefinition) return;
        var prefix = iconDefinition.prefix,
            iconName = iconDefinition.iconName,
            icon = iconDefinition.icon;
        return apiObject(_objectSpread({
            type: 'icon'
        }, iconDefinition), function() {
            ensureCss();

            if (config.autoA11y) {
                if (title) {
                    attributes['aria-labelledby'] = "".concat(config.replacementClass, "-title-").concat(nextUniqueId());
                } else {
                    attributes['aria-hidden'] = 'true';
                    attributes['focusable'] = 'false';
                }
            }

            return makeInlineSvgAbstract({
                icons: {
                    main: asFoundIcon(icon),
                    mask: mask ? asFoundIcon(mask.icon) : {
                        found: false,
                        width: null,
                        height: null,
                        icon: {}
                    }
                },
                prefix: prefix,
                iconName: iconName,
                transform: _objectSpread({}, meaninglessTransform, transform),
                symbol: symbol,
                title: title,
                extra: {
                    attributes: attributes,
                    styles: styles,
                    classes: classes
                }
            });
        });
    });
    var text = function text(content) {
        var params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
        var _params$transform2 = params.transform,
            transform = _params$transform2 === void 0 ? meaninglessTransform : _params$transform2,
            _params$title2 = params.title,
            title = _params$title2 === void 0 ? null : _params$title2,
            _params$classes2 = params.classes,
            classes = _params$classes2 === void 0 ? [] : _params$classes2,
            _params$attributes2 = params.attributes,
            attributes = _params$attributes2 === void 0 ? {} : _params$attributes2,
            _params$styles2 = params.styles,
            styles = _params$styles2 === void 0 ? {} : _params$styles2;
        return apiObject({
            type: 'text',
            content: content
        }, function() {
            ensureCss();
            return makeLayersTextAbstract({
                content: content,
                transform: _objectSpread({}, meaninglessTransform, transform),
                title: title,
                extra: {
                    attributes: attributes,
                    styles: styles,
                    classes: ["".concat(config.familyPrefix, "-layers-text")].concat(_toConsumableArray(classes))
                }
            });
        });
    };
    var counter = function counter(content) {
        var params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
        var _params$title3 = params.title,
            title = _params$title3 === void 0 ? null : _params$title3,
            _params$classes3 = params.classes,
            classes = _params$classes3 === void 0 ? [] : _params$classes3,
            _params$attributes3 = params.attributes,
            attributes = _params$attributes3 === void 0 ? {} : _params$attributes3,
            _params$styles3 = params.styles,
            styles = _params$styles3 === void 0 ? {} : _params$styles3;
        return apiObject({
            type: 'counter',
            content: content
        }, function() {
            ensureCss();
            return makeLayersCounterAbstract({
                content: content.toString(),
                title: title,
                extra: {
                    attributes: attributes,
                    styles: styles,
                    classes: ["".concat(config.familyPrefix, "-layers-counter")].concat(_toConsumableArray(classes))
                }
            });
        });
    };
    var layer = function layer(assembler) {
        var params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
        var _params$classes4 = params.classes,
            classes = _params$classes4 === void 0 ? [] : _params$classes4;
        return apiObject({
            type: 'layer'
        }, function() {
            ensureCss();
            var children = [];
            assembler(function(args) {
                Array.isArray(args) ? args.map(function(a) {
                    children = children.concat(a.abstract);
                }) : children = children.concat(args.abstract);
            });
            return [{
                tag: 'span',
                attributes: {
                    class: ["".concat(config.familyPrefix, "-layers")].concat(_toConsumableArray(classes)).join(' ')
                },
                children: children
            }];
        });
    };
    var api = {
        noAuto: noAuto,
        config: config,
        dom: dom,
        library: library,
        parse: parse,
        findIconDefinition: findIconDefinition,
        icon: icon,
        text: text,
        counter: counter,
        layer: layer,
        toHtml: toHtml
    };

    var autoReplace = function autoReplace() {
        var params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
        var _params$autoReplaceSv = params.autoReplaceSvgRoot,
            autoReplaceSvgRoot = _params$autoReplaceSv === void 0 ? DOCUMENT : _params$autoReplaceSv;
        if ((Object.keys(namespace.styles).length > 0 || config.autoFetchSvg) && IS_DOM && config.autoReplaceSvg) api.dom.i2svg({
            node: autoReplaceSvgRoot
        });
    };

    function bootstrap() {
        if (IS_BROWSER) {
            if (!WINDOW.FontAwesome) {
                WINDOW.FontAwesome = api;
            }

            domready(function() {
                autoReplace();
                observe({
                    treeCallback: onTree,
                    nodeCallback: onNode,
                    pseudoElementsCallback: searchPseudoElements
                });
            });
        }

        namespace.hooks = _objectSpread({}, namespace.hooks, {
            addPack: function addPack(prefix, icons) {
                namespace.styles[prefix] = _objectSpread({}, namespace.styles[prefix] || {}, icons);
                build();
                autoReplace();
            },
            addShims: function addShims(shims) {
                var _namespace$shims;

                (_namespace$shims = namespace.shims).push.apply(_namespace$shims, _toConsumableArray(shims));

                build();
                autoReplace();
            }
        });
    }

    bunker(bootstrap);

}());